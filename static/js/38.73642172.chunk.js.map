{"version":3,"sources":["pages/AppStatus/index.ts","../node_modules/react-hot-loader/index.js","components/Number.tsx","../node_modules/react-hot-loader/dist/react-hot-loader.production.min.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","pages/AppStatus/AppStatus.tsx"],"names":["module","exports","require","Number","props","rest","displayType","defaultValue","thousandSeparator","Object","defineProperty","value","e","React","default","AppContainer","warnAboutHMRDisabled","console","error","Children","only","children","hot","shouldWrapWithAppContainer","n","createElement","areComponentsEqual","setConfig","cold","configureComponent","TableBody","className","classes","cx","getUnhandledProps","ElementType","getElementType","_extends","handledProps","defaultProps","as","propTypes","TableCell","active","collapsing","content","disabled","icon","negative","positive","selectable","singleLine","textAlign","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","isNil","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","Table","attached","basic","celled","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","inverted","padded","renderBodyRow","size","sortable","stackable","striped","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","data","index","Body","Cell","Footer","Header","HeaderCell","Row","useTranslation","t","isWsConnected","useSelector","state","S","wsId","getWsId","bscBlockNumberProvider","getBscBlockNumberProvider","bscBlockNumberInternal","getBscBlockNumberInternal","bscBlockNumberExternal","getBscBlockNumberExternal","ethBlockNumberProvider","getEthBlockNumberProvider","ethBlockNumberInternal","getEthBlockNumberInternal","ethBlockNumberExternal","getEthBlockNumberExternal","bscData","getBscData","colSpan","JSON","stringify"],"mappings":"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","file":"static/js/38.73642172.chunk.js","sourcesContent":["export { default } from \"./AppStatus\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (process.env.NODE_ENV === 'test') {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (typeof window === 'undefined') {\n  // this is just server environment\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n} else if (!module.hot) {\n  module.exports = require('./dist/react-hot-loader.production.min.js');\n  module.exports.AppContainer.warnAboutHMRDisabled = true;\n  module.exports.hot.shouldWrapWithAppContainer = true;\n} else {\n  var evalAllowed = false;\n  var evalError = null;\n  try {\n    eval('evalAllowed = true');\n  } catch (e) {\n    // eval not allowed due to CSP\n    evalError = e && e.message ? e.message : 'unknown reason';\n  }\n\n  // TODO: dont use eval to update methods. see #1273\n  // RHL needs setPrototypeOf to operate Component inheritance, and eval to patch methods\n  var jsFeaturesPresent = !!Object.setPrototypeOf;\n\n  if (!jsFeaturesPresent || !evalAllowed) {\n    // we are not in prod mode, but RHL could not be activated\n    console.warn(\n      'React-Hot-Loader is not supported in this environment:',\n      [\n        !jsFeaturesPresent && \"some JS features are missing\",\n        !evalAllowed && \"`eval` is not allowed(\" + evalError + \")\"\n      ].join(','),\n      '.'\n    );\n    module.exports = require('./dist/react-hot-loader.production.min.js');\n  } else {\n    module.exports = window.reactHotLoaderGlobal = require('./dist/react-hot-loader.development.js');\n  }\n}\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\n\n\n\ninterface INumberFormat {\n  value?: string | number | null;\n  suffix?: string;\n  decimalScale?: number;\n  fixedDecimalScale?: boolean;\n  prefix?: string;\n  allowLeadingZeros?: boolean;\n  style?: any;\n}\n\nfunction Number(props: INumberFormat) {\n  const { ...rest } = props;\n\n  return (\n    <NumberFormat\n      displayType={'text'}\n      defaultValue={0}\n      thousandSeparator={true}\n      {...rest}\n    />\n  );\n}\n\nexport default Number;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\"));function AppContainer(e){return AppContainer.warnAboutHMRDisabled&&(AppContainer.warnAboutHMRDisabled=!0,console.error(\"React-Hot-Loader: misconfiguration detected, using production version in non-production environment.\"),console.error(\"React-Hot-Loader: Hot Module Replacement is not enabled.\")),React.Children.only(e.children)}AppContainer.warnAboutHMRDisabled=!1;var hot=function e(){return e.shouldWrapWithAppContainer?function(e){return function(n){return React.createElement(AppContainer,null,React.createElement(e,n))}}:function(e){return e}};hot.shouldWrapWithAppContainer=!1;var areComponentsEqual=function(e,n){return e===n},setConfig=function(){},cold=function(e){return e},configureComponent=function(){};exports.AppContainer=AppContainer,exports.hot=hot,exports.areComponentsEqual=areComponentsEqual,exports.setConfig=setConfig,exports.cold=cold,exports.configureComponent=configureComponent;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided each row into separate cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {\n  Header,\n  Container,\n  Image,\n  Button,\n  Input,\n  Select,\n  Icon, Label, Menu, Table,\n} from 'semantic-ui-react';\nimport Number from '../../components/Number';\nimport * as S from '../../store/selectors';\nimport { api } from '../../store/configureStore';\nimport './AppStatus.scss';\n\n\n\nconst AppStatusPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  const isWsConnected: boolean = useSelector((state) => S.data.isWsConnected(state));\n  const wsId: boolean = useSelector((state) => S.data.getWsId(state));\n\n  const bscBlockNumberProvider: number = useSelector((state) => S.data.getBscBlockNumberProvider(state));\n  const bscBlockNumberInternal: number = useSelector((state) => S.data.getBscBlockNumberInternal(state));\n  const bscBlockNumberExternal: number = useSelector((state) => S.data.getBscBlockNumberExternal(state));\n\n  const ethBlockNumberProvider: number = useSelector((state) => S.data.getEthBlockNumberProvider(state));\n  const ethBlockNumberInternal: number = useSelector((state) => S.data.getEthBlockNumberInternal(state));\n  const ethBlockNumberExternal: number = useSelector((state) => S.data.getEthBlockNumberExternal(state));\n\n  const bscData: any = useSelector((state) => S.data.getBscData(state));\n\n  return (\n    <div>\n      <Helmet>\n        <title>App Status - CosmoSwap</title>\n      </Helmet>\n\n      <Container>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell collapsing >Parameter</Table.HeaderCell>\n              <Table.HeaderCell collapsing >Value</Table.HeaderCell>\n              <Table.HeaderCell>Comment</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row negative={!isWsConnected} positive={isWsConnected}>\n              <Table.Cell colSpan='3'>WebSocket</Table.Cell>\n            </Table.Row>\n            <Table.Row negative={!isWsConnected} positive={isWsConnected}>\n              <Table.Cell>isWsConnected</Table.Cell>\n              <Table.Cell>{JSON.stringify(isWsConnected)}</Table.Cell>\n              <Table.Cell>-</Table.Cell>\n            </Table.Row>\n            <Table.Row negative={!isWsConnected} positive={isWsConnected}>\n              <Table.Cell>wsId</Table.Cell>\n              <Table.Cell>{JSON.stringify(wsId)}</Table.Cell>\n              <Table.Cell>-</Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell colSpan='3'>Nodes BSC</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Provider</Table.Cell>\n              <Table.Cell><Number value={bscBlockNumberProvider} /></Table.Cell>\n              <Table.Cell>BlockNumber</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Internal</Table.Cell>\n              <Table.Cell><Number value={bscBlockNumberInternal} /></Table.Cell>\n              <Table.Cell>BlockNumber from server via WS</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>External</Table.Cell>\n              <Table.Cell><Number value={bscBlockNumberExternal} /></Table.Cell>\n              <Table.Cell>BlockNumber from server via WS</Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell colSpan='3'>Nodes ETH</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Provider</Table.Cell>\n              <Table.Cell><Number value={ethBlockNumberProvider} /></Table.Cell>\n              <Table.Cell>BlockNumber</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Internal</Table.Cell>\n              <Table.Cell><Number value={ethBlockNumberInternal} /></Table.Cell>\n              <Table.Cell>BlockNumber from server via WS</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>External</Table.Cell>\n              <Table.Cell><Number value={ethBlockNumberExternal} /></Table.Cell>\n              <Table.Cell>BlockNumber from server via WS</Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell colSpan='3'>bscData</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>bscData</Table.Cell>\n              <Table.Cell>{JSON.stringify(bscData, null, 2)}</Table.Cell>\n              <Table.Cell>JSON</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell colSpan='3'>-</Table.Cell>\n            </Table.Row>\n\n          </Table.Body>\n        </Table>\n      </Container>\n    </div>\n  );\n};\n\nexport default hot(module)(AppStatusPage);\n"],"sourceRoot":""}