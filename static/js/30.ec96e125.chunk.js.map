{"version":3,"sources":["components/TimeLine/TimeLine.tsx","pages/CosmoVirtual/CosmoVirtual.tsx","utils/getExternalLinkProps.ts","components/Footer/Footer.tsx","components/Header.tsx","components/ScrollToTop.tsx","components/Page.tsx"],"names":["TimeLine","props","useMediaPredicate","mobileBreakpoint","t","useTranslation","stage","className","CosmoVirtual","i18n","Page","title","Container","Image","src","alt","centered","Grid","columns","stackable","Column","Trans","i18nKey","Header","as","content","Table","Body","Row","Cell","Button","href","getExternalLinkProps","target","rel","BlockIcons","inline","Footer","isMobile","getAdaptiveClassName","padded","List","link","Item","Link","to","Routes","bscFarm","ethFarm","exchange","bridge","cupToken","nft","language","horizontal","year","Date","getFullYear","MenuItems","Menu","header","NavLink","farming","exact","cosmovirtual","MenuProfile","dispatch","useDispatch","useSelector","S","isAuthenticated","dashboard","Dropdown","Divider","onClick","A","signOut","signin","signup","langOptions","key","value","text","useState","isMenuOpen","setMenuOpen","toggleMenu","changeLanguage","e","se","fixed","size","main","spaced","position","name","pointing","options","onChange","Sidebar","animation","inverted","onHide","vertical","visible","ScrollToTop","location","useLocation","visibilityButton","setVisibilityButton","useEffect","goTop","window","scroll","top","left","behavior","onscroll","height","scrollY","children","isEmpty","Helmet","lang","charSet"],"mappings":"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","file":"static/js/30.ec96e125.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Divider, Header, } from 'semantic-ui-react';\nimport { useMediaPredicate } from 'react-media-hook';\nimport { getAdaptiveClassName, mobileBreakpoint } from '../../helpers/Media';\nimport Connect from '../Connect/Connect';\nimport Number from '../Number';\nimport * as S from '../../store/selectors';\nimport './TimeLine.scss';\nimport RoiModal from '../RoiModal';\n\n\n\nconst TimeLine: React.FC<any> = (props) => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { t } = useTranslation();\n  const stage = props.stage;\n\n  return (\n\n  <div>\n  <p className={`tl ${stage == 1 ? 'timeline_current' : stage > 1 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 1 ? t('ForSale') : stage > 1 ? t('StageCompleted') : t('coming_soon', {stage:\"1\"})}\n   10 000 000 {t('tokensFor')} 0.01 USDT</p>\n  <p className={`tl ${stage == 2 ? 'timeline_current' : stage > 2 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 2 ? t('ForSale') : stage > 2 ? t('StageCompleted') : t('coming_soon', {stage:\"2\"})}\n   9 333 333 {t('tokensFor')} 0.03 USDT</p>\n  <p className={`tl ${stage == 3 ? 'timeline_current' : stage > 3 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 3 ? t('ForSale') : stage > 3 ? t('StageCompleted') : t('coming_soon', {stage:\"3\"})}\n   8 666 667 {t('tokensFor')} 0.05 USDT</p>\n  <p className={`tl ${stage == 4 ? 'timeline_current' : stage > 4 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 4 ? t('ForSale') : stage > 4 ? t('StageCompleted') : t('coming_soon', {stage:\"4\"})}\n   8 000 000 {t('tokensFor')} 0.07 USDT</p>\n  <p className={`tl ${stage == 5 ? 'timeline_current' : stage > 5 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 5 ? t('ForSale') : stage > 5 ? t('StageCompleted') : t('coming_soon', {stage:\"5\"})}\n   7 333 333 {t('tokensFor')} 0.09 USDT</p>\n  <p className={`tl ${stage == 6 ? 'timeline_current' : stage > 6 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 6 ? t('ForSale') : stage > 6 ? t('StageCompleted') : t('coming_soon', {stage:\"6\"})}\n   6 666 667 {t('tokensFor')} 0.15 USDT</p>\n  <p className={`tl ${stage == 7 ? 'timeline_current' : stage > 7 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 7 ? t('ForSale') : stage > 7 ? t('StageCompleted') : t('coming_soon', {stage:\"7\"})}\n   6 000 000 {t('tokensFor')} 0.20 USDT</p>\n  <p className={`tl ${stage == 8 ? 'timeline_current' : stage > 8 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 8 ? t('ForSale') : stage > 8 ? t('StageCompleted') : t('coming_soon', {stage:\"8\"})}\n   5 333 333 {t('tokensFor')} 0.30 USDT</p>\n  <p className={`tl ${stage == 9 ? 'timeline_current' : stage > 9 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 9 ? t('ForSale') : stage > 9 ? t('StageCompleted') : t('coming_soon', {stage:\"9\"})}\n   4 666 667 {t('tokensFor')} 0.40 USDT</p>\n  <p className={`tl ${stage == 10 ? 'timeline_current' : stage > 10 ? 'timeline_over' : 'timeline_future'}`} >\n  {stage == 10 ? t('ForSale') : stage > 10 ? t('StageCompleted') : t('coming_soon', {stage:\"10\"})}\n   4 000 000 {t('tokensFor')} 0.50 USDT</p>\n\n </div>\n\n  );\n};\nexport default TimeLine;\n\n","import React from \"react\";\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Header, Container, Grid, Table, Image, Button } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport Page from \"../../components/Page\";\nimport TimeLine from \"../../components/TimeLine/TimeLine\";\n\nimport getExternalLinkProps from \"../../utils/getExternalLinkProps\";\nimport \"./CosmoVirtual.scss\";\n\n\n\nconst CosmoVirtual: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <Page title={`CosmoVirtual - ${t('projectTitle')}`}>\n        <Container>\n        <Image src=\"/images/cv_header.png\" alt=\"CosmoVirtual\" centered />\n        \n      <div className=\"ui divider\"></div>\n        <TimeLine stage=\"3\" />\n\n      <div className=\"ui divider\"></div>\n        </Container>\n      <div >\n        <Container>\n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                  <Trans i18n={i18n} i18nKey='cv1'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_1.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n              </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_2.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                <Trans i18n={i18n} i18nKey='cv2'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                <Trans i18n={i18n} i18nKey='cv3'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_3.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_4.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                <Trans i18n={i18n} i18nKey='cv4'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                <Trans i18n={i18n} i18nKey='cv5'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_5.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_6.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p className=\"cvirtual\">\n                <Trans i18n={i18n} i18nKey='cv6'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            \n          <Container>\n          <div className=\"ui divider\"></div>  \n          <Header as=\"h3\" content={t('cv7')}/>\n            <ul>\n            <p className=\"cvirtual\"><li>{t('cv7.1')}</li></p>\n            <p className=\"cvirtual\"><li>{t('cv7.2')}</li></p>\n            <p className=\"cvirtual\"><li>{t('cv7.3')}</li></p>\n            <p className=\"cvirtual\"><li>{t('cv7.4')}</li></p>\n            <p className=\"cvirtual\"><li>{t('cv7.5')}</li></p>\n            <p className=\"cvirtual\"><li>{t('cv7.6')}</li></p>\n          </ul>\n          <div className=\"ui divider\"></div>\n          <p className=\"cvirtual\">{t('cv8')}</p>\n          <p className=\"cvirtual\">{t('cv9')}</p>\n          <p className=\"cvirtual\">{t('cv10')}</p>\n          <p className=\"cvirtual\">{t('cv11')}</p>\n\n          </Container>  \n          <div className=\"ui divider\"></div>\n          <Table className=\"compact ui inverted blue table\">\n\t<Table.Body>\n\t<Table.Row>\n\t\t<Table.Cell> {t('cv_table_h1')} </Table.Cell>\n\t\t<Table.Cell> {t('cv_table_h2')} </Table.Cell>\n\t\t<Table.Cell> {t('cv_table_h3')} </Table.Cell>\n\t\t<Table.Cell> {t('cv_table_h4')} </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 1 </Table.Cell>\n\t\t<Table.Cell> 15 000 000 </Table.Cell>\n\t\t<Table.Cell> 10 000 000 </Table.Cell>\n\t\t<Table.Cell> 0.01 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 2 \t</Table.Cell>\n\t\t<Table.Cell> 14 000 000 </Table.Cell>\n\t\t<Table.Cell>  9\t333 333 </Table.Cell>\n\t\t<Table.Cell> 0.03 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 3 </Table.Cell>\n\t\t<Table.Cell> 13 000 000 </Table.Cell>\n\t\t<Table.Cell>  8 666 667 </Table.Cell>\n\t\t<Table.Cell> 0.05 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 4 </Table.Cell>\n\t\t<Table.Cell> 12 000 000 </Table.Cell>\n\t\t<Table.Cell>  8 000 000 </Table.Cell>\n\t\t<Table.Cell> 0.07 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 5 </Table.Cell>\n\t\t<Table.Cell> 11 000 000 </Table.Cell>\n\t\t<Table.Cell>  7 333 333 </Table.Cell>\n\t\t<Table.Cell> 0.09 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 6 </Table.Cell>\n\t\t<Table.Cell> 10 000 000 </Table.Cell>\n\t\t<Table.Cell>  6 666 667 </Table.Cell>\n\t\t<Table.Cell> 0.15 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 7 </Table.Cell>\n\t\t<Table.Cell> 9 000 000 </Table.Cell>\n\t\t<Table.Cell> 6 000 000 </Table.Cell>\n\t\t<Table.Cell> 0.20 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 8 </Table.Cell>\n\t\t<Table.Cell> 8 000 000 </Table.Cell>\n\t\t<Table.Cell> 5 333 333 </Table.Cell>\n\t\t<Table.Cell> 0.30 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 9 </Table.Cell>\n\t\t<Table.Cell> 7 000 000 </Table.Cell>\n\t\t<Table.Cell> 4 666 667 </Table.Cell>\n\t\t<Table.Cell> 0.40 </Table.Cell>\n\t</Table.Row>\n\t<Table.Row>\n\t\t<Table.Cell> 10 </Table.Cell>\n\t\t<Table.Cell> 6 000 000 </Table.Cell>\n\t\t<Table.Cell> 4 000 000 </Table.Cell>\n\t\t<Table.Cell> 0.50 </Table.Cell>\n\t</Table.Row>\n</Table.Body>\n</Table>\n        \n      </Container>\n      <div className=\"ui divider\"></div>\n      <Container>\n        <ul>\n        <li className=\"cvirtual\">{t('cv12')}</li>\n        <li className=\"cvirtual\">{t('cv13')}</li>\n        <li className=\"cvirtual\">{t('cv14')}</li>\n        </ul>\n        </Container>\n        <Container>\n      <Button\n              className=\"btn-buy cvirtual center\"\n              as={'a'} href='/sendtransaction'\n              {...getExternalLinkProps()}\n            >\n              {t('BuyCV')} </Button>\n\n     </Container>\n      </div>\n    </Page>\n  );\n};\n\nexport default CosmoVirtual;\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n});\n\nexport default getExternalLinkProps;\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../../router/helper\";\nimport { Grid, Image, Container, List } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\nimport \"./Footer.scss\";\n\n\n\nconst BlockIcons: React.FC = () => (\n  <>\n    <a\n      href=\"https://t.me/CosmoFundChannel\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/telegram.png\" inline />\n    </a>\n    <a\n      href=\"https://twitter.com/CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/twitter.png\" inline />\n    </a>\n    <a\n      href=\"https://medium.com/@CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/medium.png\" inline />\n    </a>\n  </>\n);\n\n\n\nconst Footer: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <footer className={getAdaptiveClassName(\"footer\", isMobile)}>\n      <div className=\"footer__bg\">\n        <Container>\n          <div className=\"footer__icons\">\n            <BlockIcons />\n          </div>\n\n          <div className=\"footer__links\">\n            <Grid columns={5} stackable padded>\n              {/*\n              <Grid.Column>\n                <b>{t('My Menu')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.dashboard}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Dashboard')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.team}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Team')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.wallet}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Wallet')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.profile}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Profile')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              */}\n              <Grid.Column>\n                <b>{t('Farms')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bscFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Binance Farms')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.ethFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Ethereum Farms')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Services')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.exchange}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Exchange')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bridge}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Cross-chain Bridge')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.cupToken}\n                    {...getExternalLinkProps()}\n                  >\n                    Cosmo Universal Power (CUP)\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>CosmoFund NFTs</b>\n                <List link>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-main-collection'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks\n                  </List.Item>\n                  {/*<List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-limited-pack'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks Limited Pack\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/maskformusk'}\n                    {...getExternalLinkProps()}\n                  >\n                    MaskForMusk\n                  </List.Item>*/}\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmobugs'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoBugs\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmodoodle'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoDoodle\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmoart'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoArt\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.nft}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('More')}...\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Info')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.about}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('About')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'/cosmofund_whitepaper.pdf'}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Whitepaper')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/\" + i18n.language + \"/cosmofund_roadmap.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Roadmap')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/cosmofund_marketing_plan.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Marketing plan')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.tokenomics}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Tokenomics')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.faq}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('FAQ')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.contracts}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Smart Contracts')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"footer__banner\">\n            <div className=\"footer__copyright\">\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={'a'}\n                  href={'https://cosmofund.space/'}\n                  {...getExternalLinkProps()}\n                >\n                  {t('copyright', { year: new Date().getFullYear() })}{\"\\u00A0 \"}\n                </List.Item>\n              </List>\n\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.terms}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Terms and Conditions')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.privacy}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Privacy Policy')}\n                </List.Item>\n                <List.Item\n                  as={'a'}\n                  href='mailto:support@cosmofund.space'\n                  {...getExternalLinkProps()}\n                >\n                  {t('Contact Us')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.disclaimer}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Disclaimer')}\n                </List.Item>\n              </List>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Menu, Image, Sidebar, Dropdown, Label } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { mobileBreakpoint, getAdaptiveClassName } from \"../helpers/Media\";\nimport { Routes } from \"../router/helper\";\nimport * as S from \"../store/selectors\";\nimport * as A from \"../store/actions\";\n\n\n\nconst MenuItems: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Menu.Item header as={NavLink} to={Routes.nft}>\n        NFT\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.farming}>\n        {t(\"Farming\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} exact to={Routes.exchange}>\n        {t(\"Exchange\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.bridge}>\n        {t(\"Bridge\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cupToken}>\n        CUP\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cosmovirtual}>\n        CosmoVirtual\n      </Menu.Item>\n\n    </>\n  );\n};\n\nconst MenuProfile: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const signOut = () => {\n    dispatch(A.profile.signOut());\n  };\n\n  if (isAuthenticated) {\n    return (\n      <>\n        {/*<Dropdown.Item as={Link} to={Routes.profile}>\n          {t(\"My Profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.wallet}>\n          {t(\"My Wallet\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.team}>\n          {t(\"My Team\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} exact to={Routes.MyReferrals}>\n          {t('Referral program')}\n        </Dropdown.Item>\n        */}\n        <Menu.Item header as={Link} exact to={Routes.dashboard}>\n          {t('Dashboard')}\n        </Menu.Item>\n\n        <Dropdown.Divider />\n        <Dropdown.Item as='a' onClick={signOut}>{t('Sign Out')}</Dropdown.Item>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Menu.Item header as={Link} to={Routes.signin}>\n          {t(\"Sign In\")}\n        </Menu.Item>\n        <Menu.Item header as={Link} to={Routes.signup}>\n          {t(\"Sign Up\")}\n        </Menu.Item>\n      </>\n    );\n  }\n};\n\nexport const langOptions = [\n  { key: \"en\", value: \"en\", text: \"EN\" },\n  { key: \"cn\", value: \"cn\", text: \"CN\" },\n  { key: \"ru\", value: \"ru\", text: \"RU\" },\n];\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const changeLanguage = (e: any, se: any) => {\n    i18n.changeLanguage(se.value);\n  };\n  //<div style={{ color: '#ffae00' }}>{t(\"projectTitle\")}</div>\n\n  if (isAuthenticated)\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Dropdown text={t(\"Profile\")} pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <MenuProfile />\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n  else\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Menu.Item header as={Link} to={Routes.signin}>\n                    {t(\"Sign In\")}\n                  </Menu.Item>\n                  {/*<Menu.Item header as={Link} to={Routes.signup}>\n                    {t(\"Sign Up\")}\n                  </Menu.Item>*/}\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC = () => {\n  const location = useLocation();\n  const [visibilityButton, setVisibilityButton] = useState(false);\n\n  useEffect(() => {\n    goTop();\n  }, [location]);\n\n  const goTop = () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  window.onscroll = () => {\n    const height = window.scrollY;\n    if (height > 600) {\n      setVisibilityButton(true);\n    } else {\n      setVisibilityButton(false);\n    }\n  };\n\n  return visibilityButton ? (\n    <Image src=\"/images/layout/top.png\" onClick={goTop} className=\"scrollTop\" />\n  ) : null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header';\nimport ScrollToTop from './ScrollToTop';\n\n\n\ninterface IPageProps {\n  title: string;\n  description?: string;\n  isEmpty?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Page: React.FC<IPageProps> = ({ title, children, isEmpty, className }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <html lang={i18n.language} />\n        <meta charSet='utf-8' />\n        <title>{title}</title>\n      </Helmet>\n      {!isEmpty && <Header />}\n      <main\n        className={className}\n      //style={{ minHeight: '95vh', }} \n      >\n        {children}\n      </main>\n      {!isEmpty && <Footer />}\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Page;\n"],"sourceRoot":""}