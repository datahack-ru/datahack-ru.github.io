{"version":3,"sources":["components/FormSignIn.js","pages/PageSignIn.js","utils/getExternalLinkProps.ts","components/Footer/Footer.tsx","components/Header.tsx","components/ScrollToTop.tsx","components/Page.tsx"],"names":["FormSignIn","state","email","password","hidden","handleChange","bind","handleSubmit","showPassword","e","name","value","trim","this","setState","props","signIn","preventDefault","prevState","isAuthenticated","history","push","t","textAlign","verticalAlign","Column","style","maxWidth","as","basic","size","onSubmit","stacked","Input","required","type","id","label","placeholder","fluid","icon","iconPosition","onChange","action","onClick","minLength","to","React","Component","connect","S","dispatch","data","A","withRouter","withTranslation","hot","module","PageSignIn","title","padding","getExternalLinkProps","target","rel","BlockIcons","href","Image","src","inline","Footer","isMobile","useMediaPredicate","mobileBreakpoint","useTranslation","i18n","className","getAdaptiveClassName","Container","Grid","columns","stackable","padded","List","link","Item","Link","Routes","bscFarm","ethFarm","exchange","bridge","cupToken","nft","language","horizontal","year","Date","getFullYear","MenuItems","Menu","header","NavLink","farming","exact","cosmovirtual","MenuProfile","useDispatch","useSelector","dashboard","Dropdown","Divider","signOut","signin","signup","langOptions","key","text","Header","useState","isMenuOpen","setMenuOpen","toggleMenu","changeLanguage","se","fixed","main","spaced","position","pointing","options","Sidebar","animation","inverted","onHide","vertical","visible","ScrollToTop","location","useLocation","visibilityButton","setVisibilityButton","useEffect","goTop","window","scroll","top","left","behavior","onscroll","height","scrollY","Page","children","isEmpty","Helmet","lang","charSet"],"mappings":"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","file":"static/js/39.162c9b7d.chunk.js","sourcesContent":["import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport * as S from '../store/selectors';\nimport * as A from '../store/actions';\n\n\n\nclass FormSignIn extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '', password: '',\n      hidden: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showPassword = this.showPassword.bind(this);\n  }\n\n  handleChange(e, { name, value }) {\n    value = value.trim();\n    this.setState({ [name]: value, });\n  }\n\n  handleSubmit() {\n    this.props.signIn(this.state);\n  }\n\n  showPassword(e) {\n    e.preventDefault();\n    this.setState((prevState) => ({ hidden: !prevState.hidden }));\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      this.props.history.push('/my');\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.isAuthenticated) {\n      this.props.history.push('/my');\n    }\n  }\n\n  render() {\n    const { handleChange, handleSubmit, showPassword } = this;\n    const { email, password, hidden } = this.state;\n    const { t } = this.props;\n\n    return (\n      <Grid textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' textAlign='center'>\n            {/*<Image src='/favicon-96x96.png' />*/} Sign In\n          </Header>\n          <Segment textAlign='left' basic>\n            <Form size='large' onSubmit={handleSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  required\n                  type='email' id='email' name='email'\n                  label={t('Email')} placeholder='my@email.com'\n                  fluid icon='user' iconPosition='left'\n                  value={email}\n                  onChange={handleChange}\n                />\n\n                <Form.Input\n                  required\n                  type={hidden ? 'password' : 'text'} id='password' name='password'\n                  label={t('Password')} placeholder='Password'\n                  fluid icon='lock' iconPosition='left'\n                  action={{\n                    icon: hidden ? 'eye slash' : 'eye',\n                    onClick: showPassword,\n                  }}\n                  minLength={8}\n                  value={password}\n                  onChange={handleChange}\n                />\n\n                <Button type='submit' fluid size='large'>{t('Sign In')}</Button>\n              </Segment>\n            </Form>\n            <Message>\n              <b>{t('Don’t have a CosmoSwap account')}? <Link to={'/signup'}>{t('Sign Up')}</Link></b>\n            </Message>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: S.profile.isAuthenticated(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (data) => dispatch(A.profile.signIn(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  withRouter(\n    withTranslation()(\n      hot(module)(FormSignIn)\n    )\n  )\n);\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { withTranslation } from 'react-i18next';\nimport { Container } from 'semantic-ui-react';\nimport Page from '../components/Page';\nimport FormSignIn from '../components/FormSignIn';\n\n\n\nclass PageSignIn extends React.Component {\n  render() {\n    const { t } = this.props;\n\n    return (\n      <Page\n        title={t('Sign In') + ' - CosmoSwap'}\n      >\n        <Container textAlign='center' style={{ padding: '5em 0em' }} >\n          <FormSignIn />\n        </Container>\n      </Page >\n    );\n  }\n}\n\nexport default hot(module)(withTranslation()(PageSignIn));\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n});\n\nexport default getExternalLinkProps;\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../../router/helper\";\nimport { Grid, Image, Container, List } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\nimport \"./Footer.scss\";\n\n\n\nconst BlockIcons: React.FC = () => (\n  <>\n    <a\n      href=\"https://t.me/CosmoFundChannel\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/telegram.png\" inline />\n    </a>\n    <a\n      href=\"https://twitter.com/CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/twitter.png\" inline />\n    </a>\n    <a\n      href=\"https://medium.com/@CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/medium.png\" inline />\n    </a>\n  </>\n);\n\n\n\nconst Footer: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <footer className={getAdaptiveClassName(\"footer\", isMobile)}>\n      <div className=\"footer__bg\">\n        <Container>\n          <div className=\"footer__icons\">\n            <BlockIcons />\n          </div>\n\n          <div className=\"footer__links\">\n            <Grid columns={5} stackable padded>\n              {/*\n              <Grid.Column>\n                <b>{t('My Menu')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.dashboard}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Dashboard')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.team}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Team')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.wallet}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Wallet')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.profile}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Profile')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              */}\n              <Grid.Column>\n                <b>{t('Farms')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bscFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Binance Farms')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.ethFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Ethereum Farms')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Services')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.exchange}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Exchange')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bridge}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Cross-chain Bridge')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.cupToken}\n                    {...getExternalLinkProps()}\n                  >\n                    Cosmo Universal Power (CUP)\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>CosmoFund NFTs</b>\n                <List link>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-main-collection'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks\n                  </List.Item>\n                  {/*<List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-limited-pack'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks Limited Pack\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/maskformusk'}\n                    {...getExternalLinkProps()}\n                  >\n                    MaskForMusk\n                  </List.Item>*/}\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmobugs'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoBugs\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmodoodle'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoDoodle\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmoart'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoArt\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.nft}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('More')}...\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Info')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.about}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('About')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'/cosmofund_whitepaper.pdf'}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Whitepaper')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/\" + i18n.language + \"/cosmofund_roadmap.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Roadmap')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/cosmofund_marketing_plan.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Marketing plan')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.tokenomics}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Tokenomics')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.faq}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('FAQ')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.contracts}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Smart Contracts')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"footer__banner\">\n            <div className=\"footer__copyright\">\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={'a'}\n                  href={'https://cosmofund.space/'}\n                  {...getExternalLinkProps()}\n                >\n                  {t('copyright', { year: new Date().getFullYear() })}{\"\\u00A0 \"}\n                </List.Item>\n              </List>\n\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.terms}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Terms and Conditions')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.privacy}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Privacy Policy')}\n                </List.Item>\n                <List.Item\n                  as={'a'}\n                  href='mailto:support@cosmofund.space'\n                  {...getExternalLinkProps()}\n                >\n                  {t('Contact Us')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.disclaimer}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Disclaimer')}\n                </List.Item>\n              </List>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Menu, Image, Sidebar, Dropdown, Label } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { mobileBreakpoint, getAdaptiveClassName } from \"../helpers/Media\";\nimport { Routes } from \"../router/helper\";\nimport * as S from \"../store/selectors\";\nimport * as A from \"../store/actions\";\n\n\n\nconst MenuItems: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Menu.Item header as={NavLink} to={Routes.nft}>\n        NFT\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.farming}>\n        {t(\"Farming\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} exact to={Routes.exchange}>\n        {t(\"Exchange\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.bridge}>\n        {t(\"Bridge\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cupToken}>\n        CUP\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cosmovirtual}>\n        CosmoVirtual\n      </Menu.Item>\n\n    </>\n  );\n};\n\nconst MenuProfile: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const signOut = () => {\n    dispatch(A.profile.signOut());\n  };\n\n  if (isAuthenticated) {\n    return (\n      <>\n        {/*<Dropdown.Item as={Link} to={Routes.profile}>\n          {t(\"My Profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.wallet}>\n          {t(\"My Wallet\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.team}>\n          {t(\"My Team\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} exact to={Routes.MyReferrals}>\n          {t('Referral program')}\n        </Dropdown.Item>\n        */}\n        <Menu.Item header as={Link} exact to={Routes.dashboard}>\n          {t('Dashboard')}\n        </Menu.Item>\n\n        <Dropdown.Divider />\n        <Dropdown.Item as='a' onClick={signOut}>{t('Sign Out')}</Dropdown.Item>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Menu.Item header as={Link} to={Routes.signin}>\n          {t(\"Sign In\")}\n        </Menu.Item>\n        <Menu.Item header as={Link} to={Routes.signup}>\n          {t(\"Sign Up\")}\n        </Menu.Item>\n      </>\n    );\n  }\n};\n\nexport const langOptions = [\n  { key: \"en\", value: \"en\", text: \"EN\" },\n  { key: \"cn\", value: \"cn\", text: \"CN\" },\n  { key: \"ru\", value: \"ru\", text: \"RU\" },\n];\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const changeLanguage = (e: any, se: any) => {\n    i18n.changeLanguage(se.value);\n  };\n  //<div style={{ color: '#ffae00' }}>{t(\"projectTitle\")}</div>\n\n  if (isAuthenticated)\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Dropdown text={t(\"Profile\")} pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <MenuProfile />\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n  else\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Menu.Item header as={Link} to={Routes.signin}>\n                    {t(\"Sign In\")}\n                  </Menu.Item>\n                  {/*<Menu.Item header as={Link} to={Routes.signup}>\n                    {t(\"Sign Up\")}\n                  </Menu.Item>*/}\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC = () => {\n  const location = useLocation();\n  const [visibilityButton, setVisibilityButton] = useState(false);\n\n  useEffect(() => {\n    goTop();\n  }, [location]);\n\n  const goTop = () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  window.onscroll = () => {\n    const height = window.scrollY;\n    if (height > 600) {\n      setVisibilityButton(true);\n    } else {\n      setVisibilityButton(false);\n    }\n  };\n\n  return visibilityButton ? (\n    <Image src=\"/images/layout/top.png\" onClick={goTop} className=\"scrollTop\" />\n  ) : null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header';\nimport ScrollToTop from './ScrollToTop';\n\n\n\ninterface IPageProps {\n  title: string;\n  description?: string;\n  isEmpty?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Page: React.FC<IPageProps> = ({ title, children, isEmpty, className }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <html lang={i18n.language} />\n        <meta charSet='utf-8' />\n        <title>{title}</title>\n      </Helmet>\n      {!isEmpty && <Header />}\n      <main\n        className={className}\n      //style={{ minHeight: '95vh', }} \n      >\n        {children}\n      </main>\n      {!isEmpty && <Footer />}\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Page;\n"],"sourceRoot":""}