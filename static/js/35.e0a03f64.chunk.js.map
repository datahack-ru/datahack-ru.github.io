{"version":3,"sources":["components/Number12.tsx","utils/pancakeswap.ts","pages/Change/Change.tsx","utils/getExternalLinkProps.ts","components/Footer/Footer.tsx","components/Header.tsx","components/ScrollToTop.tsx","components/Page.tsx","components/Number.tsx","../node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js","../node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js","../node_modules/semantic-ui-react/dist/es/collections/Table/Table.js","utils/uniswap.ts"],"names":["Number12","props","rest","decimalScale","fixedDecimalScale","pancakeswapV2AppLink","getPancakeswapV2SwapLink","token1","token2","Change","isMobile","useMediaPredicate","mobileBreakpoint","t","useTranslation","useState","powerEthPrice","setPowerEthPrice","cupEthPrice","setCupEthPrice","cbpEthPrice","setCbpEthPrice","cdpEthPrice","setCdpEthPrice","cosmoEthPrice","setCosmoEthPrice","powerBscPrice","setPowerBscPrice","cosmoBscPrice","setCosmoBscPrice","cclpBscPrice","setCclpBscPrice","setPowerPrice","setCosmoPrice","getEthPriceCosmo","a","api","getPriceCosmoUsdt","res","console","error","getEthPricePower","getPricePower","getEthPriceCup","getPriceCup","getEthPriceCbp","getPriceCbp","getEthPriceCdp","getPriceCdp","getBscPriceCosmo","getBscPriceCosmoUsdt","getBscPricePower","getBscPriceCclp","useEffect","tempPrice","BigNumber","tempPriceItems","parseFloat","plus","dividedBy","toFixed","ethBlockNumber","useSelector","state","S","getBlockNumber","updating","setUpdating","bscBlockNumber","updating2","setUpdating2","setTime","intervalId","setInterval","Date","now","clearInterval","Page","title","className","getAdaptiveClassName","Container","Header","as","content","style","color","Table","celled","Row","HeaderCell","colSpan","Body","Cell","singleLine","value","prefix","Button","size","href","usdtBscAddress","cclpBscAddress","getExternalLinkProps","getUniswapV2SwapLink","usdtAddress","cosmoAddress","cosmoBscAddress","cupAddress","cosmoMasksPowerAddress","cosmoMasksPowerBscAddress","cosmoBugsPowerAddress","cosmoDoodlePowerAddress","target","rel","BlockIcons","Image","src","inline","Footer","i18n","Grid","columns","stackable","padded","Column","List","link","Item","Link","to","Routes","bscFarm","ethFarm","exchange","bridge","cupToken","nft","language","horizontal","year","getFullYear","MenuItems","Menu","header","NavLink","farming","exact","cosmovirtual","MenuProfile","dispatch","useDispatch","isAuthenticated","dashboard","Dropdown","Divider","onClick","A","signOut","signin","signup","langOptions","key","text","isMenuOpen","setMenuOpen","toggleMenu","changeLanguage","e","se","fixed","main","spaced","position","name","pointing","options","onChange","Sidebar","animation","inverted","onHide","vertical","visible","ScrollToTop","location","useLocation","visibilityButton","setVisibilityButton","goTop","window","scroll","top","left","behavior","onscroll","height","scrollY","children","isEmpty","Helmet","lang","charSet","Number","displayType","defaultValue","thousandSeparator","TableBody","classes","cx","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","handledProps","defaultProps","propTypes","TableCell","active","collapsing","disabled","icon","negative","positive","selectable","textAlign","verticalAlign","warning","width","useKeyOnly","useTextAlignProp","useVerticalAlignProp","useWidthProp","childrenUtils","isNil","Icon","create","createShorthandFactory","TableHeader","fullWidth","TableFooter","TableHeaderCell","sorted","useValueAndKey","TableRow","cellAs","cells","_map","cell","attached","basic","compact","definition","footerRow","headerRow","headerRows","renderBodyRow","sortable","striped","structured","tableData","unstackable","useKeyOrValueAndKey","headerShorthandOptions","headerElement","data","index","uniswapAppLink","getUniswapV3SwapLink","getUniswapV2AddLiquidityLink","getUniswapV2RemoveLiquidityLink"],"mappings":"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","file":"static/js/35.e0a03f64.chunk.js","sourcesContent":["import React from 'react';\nimport Number from './Number';\n\n\n\n\ninterface INumberFormat {\n  value?: string | number | null;\n  suffix?: string;\n  prefix?: string;\n}\n\nfunction Number12(props: INumberFormat) {\n  const { ...rest } = props;\n\n  return (\n    <Number\n      decimalScale={14}\n      fixedDecimalScale={true}\n      {...rest}\n    />\n  );\n}\n\nexport default Number12;\n","export const pancakeswapV1AppLink = 'https://v1exchange.pancakeswap.finance';\nexport const pancakeswapV2AppLink = 'https://pancakeswap.finance';\nexport function getPancakeswapV2SwapLink(token1: string, token2: string): string {\n  return pancakeswapV2AppLink + `/swap?inputCurrency=${token1}&outputCurrency=${token2}`;\n}\nexport function getPancakeswapV2AddLiquidityLink(token1: string, token2: string): string {\n  return pancakeswapV2AppLink + `/add/${token1}/${token2}`;\n}\nexport function getPancakeswapV2RemoveLiquidityLink(token1: string, token2: string): string {\n  return pancakeswapV2AppLink + `/remove/${token1}/${token2}`;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport {\n  Header,\n  Container,\n  Table,\n  Button,\n  //Grid,\n  //Input,\n  //Select,\n} from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport BigNumber from 'bignumber.js';\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport Page from \"../../components/Page\";\nimport Number12 from \"../../components/Number12\";\n//import Number4 from \"../../components/Number4\";\nimport * as S from '../../store/selectors';\nimport { api } from '../../store/configureStore';\n//import getPowerBonus from '../../utils/getPowerBonus';\nimport getExternalLinkProps from \"../../utils/getExternalLinkProps\";\nimport { getUniswapV2SwapLink } from \"../../utils/uniswap\";\nimport { getPancakeswapV2SwapLink } from \"../../utils/pancakeswap\";\nimport {\n  usdtAddress, usdtBscAddress,\n  cosmoAddress, cosmoBscAddress,\n  cupAddress,\n  cosmoMasksPowerAddress, cosmoMasksPowerBscAddress,\n  cosmoBugsPowerAddress, cosmoDoodlePowerAddress,\n  cclpBscAddress,\n} from \"../../constants\";\nimport \"./Change.scss\";\n\n\n\nconst Change: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { t } = useTranslation();\n\n  const [powerEthPrice, setPowerEthPrice] = useState('0');\n  const [cupEthPrice, setCupEthPrice] = useState('0');\n  const [cbpEthPrice, setCbpEthPrice] = useState('0');\n  const [cdpEthPrice, setCdpEthPrice] = useState('0');\n  const [cosmoEthPrice, setCosmoEthPrice] = useState('0');\n  const [powerBscPrice, setPowerBscPrice] = useState('0');\n  const [cosmoBscPrice, setCosmoBscPrice] = useState('0');\n  const [cclpBscPrice, setCclpBscPrice] = useState('0');\n\n  const [powerPrice, setPowerPrice] = useState('0');\n  const [cosmoPrice, setCosmoPrice] = useState('0');\n\n  const getEthPriceCosmo = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getPriceCosmoUsdt();\n      setCosmoEthPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getEthPricePower = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getPricePower();\n      setPowerEthPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getEthPriceCup = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getPriceCup();\n      setCupEthPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getEthPriceCbp = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getPriceCbp();\n      setCbpEthPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getEthPriceCdp = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getPriceCdp();\n      setCdpEthPrice(res);\n    } catch (error) { console.error(error); }\n  }\n\n  const getBscPriceCosmo = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getBscPriceCosmoUsdt();\n      setCosmoBscPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getBscPricePower = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getBscPricePower();\n      setPowerBscPrice(res);\n    } catch (error) { console.error(error); }\n  }\n  const getBscPriceCclp = async () => {\n    if (!api) return;\n    try {\n      const res = await api.getBscPriceCclp();\n      setCclpBscPrice(res);\n    } catch (error) { console.error(error); }\n  }\n\n  useEffect(() => {\n    let tempPrice = new BigNumber(0);\n    let tempPriceItems = 0;\n    if (parseFloat(powerEthPrice) > 0) {\n      tempPrice = tempPrice.plus(powerEthPrice);\n      tempPriceItems++;\n    }\n    if (parseFloat(powerBscPrice) > 0) {\n      tempPrice = tempPrice.plus(powerBscPrice);\n      tempPriceItems++;\n    }\n    if (tempPriceItems > 1)\n      setPowerPrice(tempPrice.dividedBy(tempPriceItems).toFixed(14));\n    else\n      setPowerPrice(tempPrice.toFixed(14));\n  }, [powerEthPrice, powerBscPrice]);\n\n  useEffect(() => {\n    let tempPrice = new BigNumber(0);\n    let tempPriceItems = 0;\n    if (parseFloat(cosmoEthPrice) > 0) {\n      tempPrice = tempPrice.plus(cosmoEthPrice);\n      tempPriceItems++;\n    }\n    if (parseFloat(cosmoBscPrice) > 0) {\n      tempPrice = tempPrice.plus(cosmoBscPrice);\n      tempPriceItems++;\n    }\n\n    if (tempPriceItems > 1)\n      setCosmoPrice(tempPrice.dividedBy(tempPriceItems).toFixed(14));\n    else\n      setCosmoPrice(tempPrice.toFixed(14));\n  }, [cosmoEthPrice, cosmoBscPrice]);\n\n  const ethBlockNumber: number = useSelector((state) => S.ethereum.getBlockNumber(state));\n  const [updating, setUpdating] = useState(false);\n  useEffect(() => {\n    if (updating) return;\n    setUpdating(true);\n    try {\n      getEthPriceCosmo();\n      getEthPriceCup();\n      getEthPricePower();\n      getEthPriceCbp();\n      getEthPriceCdp();\n    } catch (error) { console.error(error); }\n    setUpdating(false);\n  }, [ethBlockNumber]);\n\n\n  const bscBlockNumber: number = useSelector((state) => S.binance.getBlockNumber(state));\n  const [updating2, setUpdating2] = useState(false);\n  useEffect(() => {\n    if (updating2) return;\n    setUpdating2(true);\n    try {\n      getBscPriceCosmo();\n      getBscPricePower();\n      getBscPriceCclp()\n    } catch (error) { console.error(error); }\n    setUpdating2(false);\n  }, [bscBlockNumber]);\n\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 1000)\n    return () => {\n      clearInterval(intervalId);\n    }\n  }, []);\n\n  return (\n    <Page title={`${t('Exchange')} - ${t('projectTitle')}`}>\n      <div className={getAdaptiveClassName(\"change__header\", isMobile)}>\n        <Container>\n          <Header as=\"h1\" content={t('projectTitle')} className=\"shadow\" style={{ color: '#ffae00' }} />\n        </Container>\n      </div>\n\n\n      <div className={getAdaptiveClassName(\"change__section-3\", isMobile)}>\n        <Container>\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('Asset')}</Table.HeaderCell>\n                <Table.HeaderCell colSpan={2}>Ethereum</Table.HeaderCell>\n                <Table.HeaderCell colSpan={2}>Binance Smart Chain</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell singleLine>CCLP</Table.Cell>\n\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell className={'p0'}>-</Table.Cell>\n\n                <Table.Cell><Number12 value={cclpBscPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getPancakeswapV2SwapLink(usdtBscAddress, cclpBscAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n              </Table.Row>\n\n              <Table.Row>\n                <Table.Cell singleLine>COSMO</Table.Cell>\n\n                <Table.Cell><Number12 value={cosmoEthPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getUniswapV2SwapLink(usdtAddress, cosmoAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n\n                <Table.Cell><Number12 value={cosmoBscPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getPancakeswapV2SwapLink(usdtBscAddress, cosmoBscAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n              </Table.Row>\n\n              <Table.Row>\n                <Table.Cell singleLine>CUP</Table.Cell>\n\n                <Table.Cell><Number12 value={cupEthPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getUniswapV2SwapLink(cosmoAddress, cupAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell className={'p0'}>-</Table.Cell>\n              </Table.Row>\n\n              <Table.Row>\n                <Table.Cell singleLine>CMP</Table.Cell>\n\n                <Table.Cell><Number12 value={powerEthPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getUniswapV2SwapLink(cosmoAddress, cosmoMasksPowerAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n\n                <Table.Cell><Number12 value={powerBscPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getPancakeswapV2SwapLink(cosmoBscAddress, cosmoMasksPowerBscAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n              </Table.Row>\n\n              <Table.Row>\n                <Table.Cell singleLine>CBP</Table.Cell>\n\n                <Table.Cell><Number12 value={cbpEthPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getUniswapV2SwapLink(cosmoAddress, cosmoBugsPowerAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell className={'p0'}>-</Table.Cell>\n              </Table.Row>\n\n              <Table.Row>\n                <Table.Cell singleLine>CDP</Table.Cell>\n\n                <Table.Cell><Number12 value={cdpEthPrice} prefix='$' /></Table.Cell>\n                <Table.Cell className={'p0'}>\n                  <Button\n                    size='small' as={'a'}\n                    href={getUniswapV2SwapLink(cosmoAddress, cosmoDoodlePowerAddress)}\n                    {...getExternalLinkProps()}\n                  >{t('Swap')}</Button>\n                </Table.Cell>\n\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell className={'p0'}>-</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Container>\n      </div>\n    </Page>\n  );\n};\n\nexport default Change;\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n});\n\nexport default getExternalLinkProps;\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../../router/helper\";\nimport { Grid, Image, Container, List } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\nimport \"./Footer.scss\";\n\n\n\nconst BlockIcons: React.FC = () => (\n  <>\n    <a\n      href=\"https://t.me/CosmoFundChannel\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/telegram.png\" inline />\n    </a>\n    <a\n      href=\"https://twitter.com/CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/twitter.png\" inline />\n    </a>\n    <a\n      href=\"https://medium.com/@CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/medium.png\" inline />\n    </a>\n  </>\n);\n\n\n\nconst Footer: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <footer className={getAdaptiveClassName(\"footer\", isMobile)}>\n      <div className=\"footer__bg\">\n        <Container>\n          <div className=\"footer__icons\">\n            <BlockIcons />\n          </div>\n\n          <div className=\"footer__links\">\n            <Grid columns={5} stackable padded>\n              {/*\n              <Grid.Column>\n                <b>{t('My Menu')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.dashboard}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Dashboard')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.team}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Team')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.wallet}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Wallet')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.profile}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Profile')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              */}\n              <Grid.Column>\n                <b>{t('Farms')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bscFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Binance Farms')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.ethFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Ethereum Farms')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Services')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.exchange}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Exchange')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bridge}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Cross-chain Bridge')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.cupToken}\n                    {...getExternalLinkProps()}\n                  >\n                    Cosmo Universal Power (CUP)\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>CosmoFund NFTs</b>\n                <List link>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-main-collection'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks\n                  </List.Item>\n                  {/*<List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-limited-pack'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks Limited Pack\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/maskformusk'}\n                    {...getExternalLinkProps()}\n                  >\n                    MaskForMusk\n                  </List.Item>*/}\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmobugs'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoBugs\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmodoodle'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoDoodle\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmoart'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoArt\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.nft}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('More')}...\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Info')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.about}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('About')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'/cosmofund_whitepaper.pdf'}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Whitepaper')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/\" + i18n.language + \"/cosmofund_roadmap.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Roadmap')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/cosmofund_marketing_plan.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Marketing plan')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.tokenomics}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Tokenomics')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.faq}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('FAQ')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.contracts}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Smart Contracts')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"footer__banner\">\n            <div className=\"footer__copyright\">\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={'a'}\n                  href={'https://cosmofund.space/'}\n                  {...getExternalLinkProps()}\n                >\n                  {t('copyright', { year: new Date().getFullYear() })}{\"\\u00A0 \"}\n                </List.Item>\n              </List>\n\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.terms}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Terms and Conditions')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.privacy}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Privacy Policy')}\n                </List.Item>\n                <List.Item\n                  as={'a'}\n                  href='mailto:support@cosmofund.space'\n                  {...getExternalLinkProps()}\n                >\n                  {t('Contact Us')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.disclaimer}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Disclaimer')}\n                </List.Item>\n              </List>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Menu, Image, Sidebar, Dropdown, Label } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { mobileBreakpoint, getAdaptiveClassName } from \"../helpers/Media\";\nimport { Routes } from \"../router/helper\";\nimport * as S from \"../store/selectors\";\nimport * as A from \"../store/actions\";\n\n\n\nconst MenuItems: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Menu.Item header as={NavLink} to={Routes.nft}>\n        NFT\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.farming}>\n        {t(\"Farming\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} exact to={Routes.exchange}>\n        {t(\"Exchange\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.bridge}>\n        {t(\"Bridge\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cupToken}>\n        CUP\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cosmovirtual}>\n        CosmoVirtual\n      </Menu.Item>\n\n    </>\n  );\n};\n\nconst MenuProfile: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const signOut = () => {\n    dispatch(A.profile.signOut());\n  };\n\n  if (isAuthenticated) {\n    return (\n      <>\n        {/*<Dropdown.Item as={Link} to={Routes.profile}>\n          {t(\"My Profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.wallet}>\n          {t(\"My Wallet\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.team}>\n          {t(\"My Team\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} exact to={Routes.MyReferrals}>\n          {t('Referral program')}\n        </Dropdown.Item>\n        */}\n        <Menu.Item header as={Link} exact to={Routes.dashboard}>\n          {t('Dashboard')}\n        </Menu.Item>\n\n        <Dropdown.Divider />\n        <Dropdown.Item as='a' onClick={signOut}>{t('Sign Out')}</Dropdown.Item>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Menu.Item header as={Link} to={Routes.signin}>\n          {t(\"Sign In\")}\n        </Menu.Item>\n        <Menu.Item header as={Link} to={Routes.signup}>\n          {t(\"Sign Up\")}\n        </Menu.Item>\n      </>\n    );\n  }\n};\n\nexport const langOptions = [\n  { key: \"en\", value: \"en\", text: \"EN\" },\n  { key: \"cn\", value: \"cn\", text: \"CN\" },\n  { key: \"ru\", value: \"ru\", text: \"RU\" },\n];\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const changeLanguage = (e: any, se: any) => {\n    i18n.changeLanguage(se.value);\n  };\n  //<div style={{ color: '#ffae00' }}>{t(\"projectTitle\")}</div>\n\n  if (isAuthenticated)\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Dropdown text={t(\"Profile\")} pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <MenuProfile />\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n  else\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Menu.Item header as={Link} to={Routes.signin}>\n                    {t(\"Sign In\")}\n                  </Menu.Item>\n                  {/*<Menu.Item header as={Link} to={Routes.signup}>\n                    {t(\"Sign Up\")}\n                  </Menu.Item>*/}\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC = () => {\n  const location = useLocation();\n  const [visibilityButton, setVisibilityButton] = useState(false);\n\n  useEffect(() => {\n    goTop();\n  }, [location]);\n\n  const goTop = () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  window.onscroll = () => {\n    const height = window.scrollY;\n    if (height > 600) {\n      setVisibilityButton(true);\n    } else {\n      setVisibilityButton(false);\n    }\n  };\n\n  return visibilityButton ? (\n    <Image src=\"/images/layout/top.png\" onClick={goTop} className=\"scrollTop\" />\n  ) : null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header';\nimport ScrollToTop from './ScrollToTop';\n\n\n\ninterface IPageProps {\n  title: string;\n  description?: string;\n  isEmpty?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Page: React.FC<IPageProps> = ({ title, children, isEmpty, className }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <html lang={i18n.language} />\n        <meta charSet='utf-8' />\n        <title>{title}</title>\n      </Helmet>\n      {!isEmpty && <Header />}\n      <main\n        className={className}\n      //style={{ minHeight: '95vh', }} \n      >\n        {children}\n      </main>\n      {!isEmpty && <Footer />}\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\n\n\n\ninterface INumberFormat {\n  value?: string | number | null;\n  suffix?: string;\n  decimalScale?: number;\n  fixedDecimalScale?: boolean;\n  prefix?: string;\n  allowLeadingZeros?: boolean;\n  style?: any;\n}\n\nfunction Number(props: INumberFormat) {\n  const { ...rest } = props;\n\n  return (\n    <NumberFormat\n      displayType={'text'}\n      defaultValue={0}\n      thousandSeparator={true}\n      {...rest}\n    />\n  );\n}\n\nexport default Number;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n\nfunction TableBody(props) {\n  var children = props.children,\n      className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nTableBody.handledProps = [\"as\", \"children\", \"className\"];\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A table row can have cells.\n */\n\nfunction TableCell(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      content = props.content,\n      disabled = props.disabled,\n      error = props.error,\n      icon = props.icon,\n      negative = props.negative,\n      positive = props.positive,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning,\n      width = props.width;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(width, 'wide'), className);\n  var rest = getUnhandledProps(TableCell, props);\n  var ElementType = getElementType(TableCell, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\n\nTableCell.handledProps = [\"active\", \"as\", \"children\", \"className\", \"collapsing\", \"content\", \"disabled\", \"error\", \"icon\", \"negative\", \"positive\", \"selectable\", \"singleLine\", \"textAlign\", \"verticalAlign\", \"warning\", \"width\"];\nTableCell.defaultProps = {\n  as: 'td'\n};\nTableCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A cell can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A cell can be collapsing so that it only uses as much space as required. */\n  collapsing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A cell can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A cell may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon /> */\n  icon: customPropTypes.itemShorthand,\n\n  /** A cell may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A cell may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A cell can be selectable. */\n  selectable: PropTypes.bool,\n\n  /** A cell can specify that its contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table cell can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table cell can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A cell may warn a user. */\n  warning: PropTypes.bool,\n\n  /** A table can specify the width of individual columns independently. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nTableCell.create = createShorthandFactory(TableCell, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A table can have a header.\n */\n\nfunction TableHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fullWidth = props.fullWidth;\n  var classes = cx(useKeyOnly(fullWidth, 'full-width'), className);\n  var rest = getUnhandledProps(TableHeader, props);\n  var ElementType = getElementType(TableHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTableHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fullWidth\"];\nTableHeader.defaultProps = {\n  as: 'thead'\n};\nTableHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */\n  fullWidth: PropTypes.bool\n} : {};\nexport default TableHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport TableHeader from './TableHeader';\n/**\n * A table can have a footer.\n */\n\nfunction TableFooter(props) {\n  var as = props.as;\n  var rest = getUnhandledProps(TableFooter, props);\n  return /*#__PURE__*/React.createElement(TableHeader, _extends({}, rest, {\n    as: as\n  }));\n}\n\nTableFooter.handledProps = [\"as\"];\nTableFooter.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType\n} : {};\nTableFooter.defaultProps = {\n  as: 'tfoot'\n};\nexport default TableFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useValueAndKey } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have a header cell.\n */\n\nfunction TableHeaderCell(props) {\n  var as = props.as,\n      className = props.className,\n      sorted = props.sorted;\n  var classes = cx(useValueAndKey(sorted, 'sorted'), className);\n  var rest = getUnhandledProps(TableHeaderCell, props);\n  return /*#__PURE__*/React.createElement(TableCell, _extends({}, rest, {\n    as: as,\n    className: classes\n  }));\n}\n\nTableHeaderCell.handledProps = [\"as\", \"className\", \"sorted\"];\nTableHeaderCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A header cell can be sorted in ascending or descending order. */\n  sorted: PropTypes.oneOf(['ascending', 'descending'])\n} : {};\nTableHeaderCell.defaultProps = {\n  as: 'th'\n};\nexport default TableHeaderCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: PropTypes.elementType,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport TableBody from './TableBody';\nimport TableCell from './TableCell';\nimport TableFooter from './TableFooter';\nimport TableHeader from './TableHeader';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableRow from './TableRow';\n/**\n * A table displays a collections of data grouped into rows.\n */\n\nfunction Table(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      celled = props.celled,\n      children = props.children,\n      className = props.className,\n      collapsing = props.collapsing,\n      color = props.color,\n      columns = props.columns,\n      compact = props.compact,\n      definition = props.definition,\n      fixed = props.fixed,\n      footerRow = props.footerRow,\n      headerRow = props.headerRow,\n      headerRows = props.headerRows,\n      inverted = props.inverted,\n      padded = props.padded,\n      renderBodyRow = props.renderBodyRow,\n      selectable = props.selectable,\n      singleLine = props.singleLine,\n      size = props.size,\n      sortable = props.sortable,\n      stackable = props.stackable,\n      striped = props.striped,\n      structured = props.structured,\n      tableData = props.tableData,\n      textAlign = props.textAlign,\n      unstackable = props.unstackable,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column'), 'table', className);\n  var rest = getUnhandledProps(Table, props);\n  var ElementType = getElementType(Table, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var hasHeaderRows = headerRow || headerRows;\n  var headerShorthandOptions = {\n    defaultProps: {\n      cellAs: 'th'\n    }\n  };\n  var headerElement = hasHeaderRows && /*#__PURE__*/React.createElement(TableHeader, null, TableRow.create(headerRow, headerShorthandOptions), _map(headerRows, function (data) {\n    return TableRow.create(data, headerShorthandOptions);\n  }));\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), headerElement, /*#__PURE__*/React.createElement(TableBody, null, renderBodyRow && _map(tableData, function (data, index) {\n    return TableRow.create(renderBodyRow(data, index));\n  })), footerRow && /*#__PURE__*/React.createElement(TableFooter, null, TableRow.create(footerRow)));\n}\n\nTable.handledProps = [\"as\", \"attached\", \"basic\", \"celled\", \"children\", \"className\", \"collapsing\", \"color\", \"columns\", \"compact\", \"definition\", \"fixed\", \"footerRow\", \"headerRow\", \"headerRows\", \"inverted\", \"padded\", \"renderBodyRow\", \"selectable\", \"singleLine\", \"size\", \"sortable\", \"stackable\", \"striped\", \"structured\", \"tableData\", \"textAlign\", \"unstackable\", \"verticalAlign\"];\nTable.defaultProps = {\n  as: 'table'\n};\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach table to other content */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A table can reduce its complexity to increase readability. */\n  basic: PropTypes.oneOfType([PropTypes.oneOf(['very']), PropTypes.bool]),\n\n  /** A table may be divided each row into separate cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A table can be collapsing, taking up only as much space as its rows. */\n  collapsing: PropTypes.bool,\n\n  /** A table can be given a color to distinguish it from other tables. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A table can specify its column count to divide its content evenly. */\n  columns: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A table may sometimes need to be more compact to make more rows visible at a time. */\n  compact: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A table may be formatted to emphasize a first column that defines a rows content. */\n  definition: PropTypes.bool,\n\n  /**\n   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content\n   */\n  fixed: PropTypes.bool,\n\n  /** Shorthand for a TableRow to be placed within Table.Footer. */\n  footerRow: customPropTypes.itemShorthand,\n\n  /** Shorthand for a TableRow to be placed within Table.Header. */\n  headerRow: customPropTypes.every([customPropTypes.disallow(['headerRows']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for multiple TableRows to be placed within Table.Header. */\n  headerRows: customPropTypes.every([customPropTypes.disallow(['headerRow']), customPropTypes.collectionShorthand]),\n\n  /** A table's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A table may sometimes need to be more padded for legibility. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /**\n   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.\n   *\n   * @param {*} data - An element in the `tableData` array.\n   * @param {number} index - The index of the current element in `tableData`.\n   * @returns {*} Shorthand for a Table.Row.\n   */\n  renderBodyRow: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['tableData']), PropTypes.func]),\n\n  /** A table can have its rows appear selectable. */\n  selectable: PropTypes.bool,\n\n  /** A table can specify that its cell contents should remain on a single line and not wrap. */\n  singleLine: PropTypes.bool,\n\n  /** A table can also be small or large. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),\n\n  /** A table may allow a user to sort contents by clicking on a table header. */\n  sortable: PropTypes.bool,\n\n  /** A table can specify how it stacks table content responsively. */\n  stackable: PropTypes.bool,\n\n  /** A table can stripe alternate rows of content with a darker color to increase contrast. */\n  striped: PropTypes.bool,\n\n  /** A table can be formatted to display complex structured data. */\n  structured: PropTypes.bool,\n\n  /** Data to be passed to the renderBodyRow function. */\n  tableData: customPropTypes.every([customPropTypes.disallow(['children']), customPropTypes.demand(['renderBodyRow']), PropTypes.array]),\n\n  /** A table can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table can specify how it stacks table content responsively. */\n  unstackable: PropTypes.bool,\n\n  /** A table can adjust its text alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nTable.Body = TableBody;\nTable.Cell = TableCell;\nTable.Footer = TableFooter;\nTable.Header = TableHeader;\nTable.HeaderCell = TableHeaderCell;\nTable.Row = TableRow;\nexport default Table;","export const uniswapAppLink = 'https://app.uniswap.org';\nexport function getUniswapV3SwapLink(token1: string, token2: string): string {\n  return uniswapAppLink + `/#/swap?inputCurrency=${token1}&outputCurrency=${token2}`;\n}\nexport function getUniswapV2SwapLink(token1: string, token2: string): string {\n  return getUniswapV3SwapLink(token1, token2) + '&use=V2';\n}\nexport function getUniswapV2AddLiquidityLink(token1: string, token2: string): string {\n  return uniswapAppLink + `/#/add/v2/${token1}/${token2}`;\n}\nexport function getUniswapV2RemoveLiquidityLink(token1: string, token2: string): string {\n  return uniswapAppLink + `/#/remove/v2/${token1}/${token2}`;\n}\n"],"sourceRoot":""}