{"version":3,"sources":["pages/Team/Team.tsx","utils/getExternalLinkProps.ts","components/Footer/Footer.tsx","components/Header.tsx","components/ScrollToTop.tsx","components/Page.tsx","../node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","../node_modules/semantic-ui-react/dist/es/addons/Select/Select.js"],"names":["Team","isMobile","useMediaPredicate","mobileBreakpoint","useState","isLoading","setIsLoading","useEffect","setTimeout","Loading","Page","title","className","getAdaptiveClassName","Container","Grid","stackable","columns","Row","Column","Header","as","content","Select","options","key","value","text","Input","Button","textAlign","getExternalLinkProps","target","rel","BlockIcons","href","Image","src","inline","Footer","useTranslation","i18n","t","padded","List","link","Item","Link","to","Routes","bscFarm","ethFarm","exchange","bridge","cupToken","nft","language","horizontal","year","Date","getFullYear","MenuItems","Menu","header","NavLink","farming","exact","cosmovirtual","MenuProfile","dispatch","useDispatch","useSelector","S","isAuthenticated","dashboard","Dropdown","Divider","onClick","A","signOut","signin","signup","langOptions","isMenuOpen","setMenuOpen","toggleMenu","changeLanguage","e","se","fixed","size","main","spaced","position","name","pointing","onChange","Sidebar","animation","inverted","onHide","vertical","visible","ScrollToTop","location","useLocation","visibilityButton","setVisibilityButton","goTop","window","scroll","top","left","behavior","onscroll","height","scrollY","children","isEmpty","Helmet","lang","charSet","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","inputRef","createRef","computeIcon","_this$props","props","loading","icon","_isNil","computeTabIndex","_this$props2","disabled","tabIndex","focus","current","select","handleChange","_get","_invoke","_extends","handleChildOverrides","child","defaultProps","ref","c","handleRef","partitionProps","_this$props3","type","unhandled","getUnhandledProps","_partitionHTMLProps","partitionHTMLProps","htmlInputProps","rest","_inheritsLoose","prototype","render","_this2","_this$props4","action","actionPosition","error","fluid","iconPosition","input","label","labelPosition","transparent","classes","cx","useKeyOnly","useValueAndKey","ElementType","getElementType","_this$partitionProps","childrenUtils","isNil","childElements","_map","Children","toArray","cloneElement","React","createElement","actionElement","create","autoGenerateKey","labelElement","Label","_includes","createHTMLInput","Icon","Component","handledProps","propTypes","createShorthandFactory","selection"],"mappings":"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","file":"static/js/33.50a570ac.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Container,\n  Button,\n  Header,\n  Select,\n  Input,\n} from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport Page from \"../../components/Page\";\nimport Loading from \"../../components/Loading\";\nimport \"./Team.scss\";\n\nconst Team: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // TODO: remove - demo loading\n  useEffect(() => {\n    setTimeout(() => setIsLoading(false), 4000);\n  }, []);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Page title=\"My team\">\n      <div className={getAdaptiveClassName(\"team__header\", isMobile)}>\n        <Container>\n          <h1>\n            Want to earn more COSMO? <br />\n            Invite a friend and farm together.\n          </h1>\n          <p>\n            Share your referral link to your friends and get daily COSMO reward\n            from each registered friend that staked in your team.\n          </p>\n        </Container>\n      </div>\n      <div className={getAdaptiveClassName(\"team\", isMobile)}>\n        <Container>\n          <div className={getAdaptiveClassName(\"team__content\", isMobile)}>\n            <Grid stackable columns={2}>\n              <Grid.Row className=\"team__section-1\">\n                <Grid.Column>\n                  <Header as=\"h2\" content=\" My Team tree\" />\n                  <label>Referrals Distributions</label>\n                  <Select\n                    options={[\n                      { key: \"Random\", value: \"Random\", text: \"Random Team\" },\n                    ]}\n                    value=\"Random\"\n                  />\n                </Grid.Column>\n                <Grid.Column>\n                  <Header as=\"h3\" content=\" My Referral link\" />\n                  <div className=\"input-group\">\n                    <Input />\n                    <Button>Copy</Button>\n                  </div>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <Grid columns={1} className=\"team__section-2\">\n              <Grid.Column textAlign=\"center\">\n                <Button>To my account</Button>\n                <Button>One level up</Button>\n                <Button>Refresh</Button>\n              </Grid.Column>\n            </Grid>\n            <Grid columns={2} stackable>\n              <Grid.Row className=\"team__section-3\">\n                <Grid.Column>ID: 0</Grid.Column>\n                <Grid.Column textAlign=\"right\">\n                  Your account (email@example.com)\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n            <div className=\"team__section-4\">\n              <div className=\"row-between dotted\">\n                <dt> Referral level</dt>\n                <dd>MAX</dd>\n              </div>\n              <div className=\"row-between dotted\">\n                <dt>Direct referrals</dt>\n                <dd>123,456,789</dd>\n              </div>\n              <div className=\"row-between dotted\">\n                <dt>Total farmed</dt>\n                <dd>1,234,567 COSMO</dd>\n              </div>\n              <div className=\"row-between dotted\">\n                <dt> Farmed today</dt>\n                <dd>123,456,789 COSM</dd>\n              </div>\n            </div>\n            <Grid columns={2} stackable>\n              <Grid.Row className=\"team__section-5\">\n                <Grid.Column className=\" br\">\n                  <div className=\"row-between row-header\">\n                    <dt> Left Team</dt>\n                    <dd>\n                      <b>Weak team</b>\n                    </dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Members</dt>\n                    <dd>123,456,789</dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Farmed today</dt>\n                    <dd>123,456,000 COSMO</dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Total farmed</dt>\n                    <dd>123,456,789,000 COSMO</dd>\n                  </div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div className=\"row-between row-header\">\n                    <dt> Right Team</dt>\n                    <dd>\n                      <b>Weak team</b>\n                    </dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Members</dt>\n                    <dd>123,456,789</dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Farmed today</dt>\n                    <dd>123,456,000 COSMO</dd>\n                  </div>\n                  <div className=\"row-between dotted\">\n                    <dt> Total farmed</dt>\n                    <dd>123,456,789,000 COSMO</dd>\n                  </div>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    </Page>\n  );\n};\n\nexport default Team;\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n});\n\nexport default getExternalLinkProps;\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../../router/helper\";\nimport { Grid, Image, Container, List } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\nimport \"./Footer.scss\";\n\n\n\nconst BlockIcons: React.FC = () => (\n  <>\n    <a\n      href=\"https://t.me/CosmoFundChannel\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/telegram.png\" inline />\n    </a>\n    <a\n      href=\"https://twitter.com/CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/twitter.png\" inline />\n    </a>\n    <a\n      href=\"https://medium.com/@CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/medium.png\" inline />\n    </a>\n  </>\n);\n\n\n\nconst Footer: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <footer className={getAdaptiveClassName(\"footer\", isMobile)}>\n      <div className=\"footer__bg\">\n        <Container>\n          <div className=\"footer__icons\">\n            <BlockIcons />\n          </div>\n\n          <div className=\"footer__links\">\n            <Grid columns={5} stackable padded>\n              {/*\n              <Grid.Column>\n                <b>{t('My Menu')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.dashboard}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Dashboard')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.team}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Team')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.wallet}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Wallet')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.profile}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Profile')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              */}\n              <Grid.Column>\n                <b>{t('Farms')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bscFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Binance Farms')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.ethFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Ethereum Farms')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Services')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.exchange}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Exchange')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bridge}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Cross-chain Bridge')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.cupToken}\n                    {...getExternalLinkProps()}\n                  >\n                    Cosmo Universal Power (CUP)\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>CosmoFund NFTs</b>\n                <List link>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-main-collection'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks\n                  </List.Item>\n                  {/*<List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-limited-pack'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks Limited Pack\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/maskformusk'}\n                    {...getExternalLinkProps()}\n                  >\n                    MaskForMusk\n                  </List.Item>*/}\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmobugs'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoBugs\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmodoodle'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoDoodle\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmoart'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoArt\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.nft}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('More')}...\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Info')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.about}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('About')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'/cosmofund_whitepaper.pdf'}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Whitepaper')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/\" + i18n.language + \"/cosmofund_roadmap.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Roadmap')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/cosmofund_marketing_plan.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Marketing plan')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.tokenomics}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Tokenomics')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.faq}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('FAQ')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.contracts}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Smart Contracts')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"footer__banner\">\n            <div className=\"footer__copyright\">\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={'a'}\n                  href={'https://cosmofund.space/'}\n                  {...getExternalLinkProps()}\n                >\n                  {t('copyright', { year: new Date().getFullYear() })}{\"\\u00A0 \"}\n                </List.Item>\n              </List>\n\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.terms}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Terms and Conditions')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.privacy}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Privacy Policy')}\n                </List.Item>\n                <List.Item\n                  as={'a'}\n                  href='mailto:support@cosmofund.space'\n                  {...getExternalLinkProps()}\n                >\n                  {t('Contact Us')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.disclaimer}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Disclaimer')}\n                </List.Item>\n              </List>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Menu, Image, Sidebar, Dropdown, Label } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { mobileBreakpoint, getAdaptiveClassName } from \"../helpers/Media\";\nimport { Routes } from \"../router/helper\";\nimport * as S from \"../store/selectors\";\nimport * as A from \"../store/actions\";\n\n\n\nconst MenuItems: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Menu.Item header as={NavLink} to={Routes.nft}>\n        NFT\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.farming}>\n        {t(\"Farming\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} exact to={Routes.exchange}>\n        {t(\"Exchange\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.bridge}>\n        {t(\"Bridge\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cupToken}>\n        CUP\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cosmovirtual}>\n        CosmoVirtual\n      </Menu.Item>\n\n    </>\n  );\n};\n\nconst MenuProfile: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const signOut = () => {\n    dispatch(A.profile.signOut());\n  };\n\n  if (isAuthenticated) {\n    return (\n      <>\n        {/*<Dropdown.Item as={Link} to={Routes.profile}>\n          {t(\"My Profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.wallet}>\n          {t(\"My Wallet\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.team}>\n          {t(\"My Team\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} exact to={Routes.MyReferrals}>\n          {t('Referral program')}\n        </Dropdown.Item>\n        */}\n        <Menu.Item header as={Link} exact to={Routes.dashboard}>\n          {t('Dashboard')}\n        </Menu.Item>\n\n        <Dropdown.Divider />\n        <Dropdown.Item as='a' onClick={signOut}>{t('Sign Out')}</Dropdown.Item>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Menu.Item header as={Link} to={Routes.signin}>\n          {t(\"Sign In\")}\n        </Menu.Item>\n        <Menu.Item header as={Link} to={Routes.signup}>\n          {t(\"Sign Up\")}\n        </Menu.Item>\n      </>\n    );\n  }\n};\n\nexport const langOptions = [\n  { key: \"en\", value: \"en\", text: \"EN\" },\n  { key: \"cn\", value: \"cn\", text: \"CN\" },\n  { key: \"ru\", value: \"ru\", text: \"RU\" },\n];\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const changeLanguage = (e: any, se: any) => {\n    i18n.changeLanguage(se.value);\n  };\n  //<div style={{ color: '#ffae00' }}>{t(\"projectTitle\")}</div>\n\n  if (isAuthenticated)\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Dropdown text={t(\"Profile\")} pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <MenuProfile />\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n  else\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Menu.Item header as={Link} to={Routes.signin}>\n                    {t(\"Sign In\")}\n                  </Menu.Item>\n                  {/*<Menu.Item header as={Link} to={Routes.signup}>\n                    {t(\"Sign Up\")}\n                  </Menu.Item>*/}\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC = () => {\n  const location = useLocation();\n  const [visibilityButton, setVisibilityButton] = useState(false);\n\n  useEffect(() => {\n    goTop();\n  }, [location]);\n\n  const goTop = () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  window.onscroll = () => {\n    const height = window.scrollY;\n    if (height > 600) {\n      setVisibilityButton(true);\n    } else {\n      setVisibilityButton(false);\n    }\n  };\n\n  return visibilityButton ? (\n    <Image src=\"/images/layout/top.png\" onClick={goTop} className=\"scrollTop\" />\n  ) : null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header';\nimport ScrollToTop from './ScrollToTop';\n\n\n\ninterface IPageProps {\n  title: string;\n  description?: string;\n  isEmpty?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Page: React.FC<IPageProps> = ({ title, children, isEmpty, className }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <html lang={i18n.language} />\n        <meta charSet='utf-8' />\n        <title>{title}</title>\n      </Helmet>\n      {!isEmpty && <Header />}\n      <main\n        className={className}\n      //style={{ minHeight: '95vh', }} \n      >\n        {children}\n      </main>\n      {!isEmpty && <Footer />}\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _includes from \"lodash-es/includes\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { handleRef } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Input, _Component);\n\n  function Input() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n\n    _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    };\n\n    _this.focus = function () {\n      return _this.inputRef.current.focus();\n    };\n\n    _this.select = function () {\n      return _this.inputRef.current.select();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    };\n\n    _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          htmlInputProps = _partitionHTMLProps[0],\n          rest = _partitionHTMLProps[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    };\n\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        action = _this$props4.action,\n        actionPosition = _this$props4.actionPosition,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        disabled = _this$props4.disabled,\n        error = _this$props4.error,\n        fluid = _this$props4.fluid,\n        focus = _this$props4.focus,\n        icon = _this$props4.icon,\n        iconPosition = _this$props4.iconPosition,\n        input = _this$props4.input,\n        inverted = _this$props4.inverted,\n        label = _this$props4.label,\n        labelPosition = _this$props4.labelPosition,\n        loading = _this$props4.loading,\n        size = _this$props4.size,\n        transparent = _this$props4.transparent,\n        type = _this$props4.type;\n    var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n    var ElementType = getElementType(Input, this.props);\n\n    var _this$partitionProps = this.partitionProps(),\n        htmlInputProps = _this$partitionProps[0],\n        rest = _this$partitionProps[1]; // Render with children\n    // ----------------------------------------\n\n\n    if (!childrenUtils.isNil(children)) {\n      // add htmlInputProps to the `<input />` child\n      var childElements = _map(Children.toArray(children), function (child) {\n        if (child.type !== 'input') return child;\n        return /*#__PURE__*/cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n      });\n\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childElements);\n    } // Render Shorthand\n    // ----------------------------------------\n\n\n    var actionElement = Button.create(action, {\n      autoGenerateKey: false\n    });\n    var labelElement = Label.create(label, {\n      defaultProps: {\n        className: cx('label', // add 'left|right corner'\n        _includes(labelPosition, 'corner') && labelPosition)\n      },\n      autoGenerateKey: false\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n      defaultProps: htmlInputProps,\n      autoGenerateKey: false\n    }), Icon.create(this.computeIcon(), {\n      autoGenerateKey: false\n    }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n  };\n\n  return Input;\n}(Component);\n\nInput.handledProps = [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.defaultProps = {\n  type: 'text'\n};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Dropdown from '../../modules/Dropdown';\n/**\n * A Select is sugar for <Dropdown selection />.\n * @see Dropdown\n * @see Form\n */\n\nfunction Select(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({}, props, {\n    selection: true\n  }));\n}\n\nSelect.handledProps = [\"options\"];\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */\n  options: PropTypes.arrayOf(PropTypes.shape(Dropdown.Item.propTypes)).isRequired\n} : {};\nSelect.Divider = Dropdown.Divider;\nSelect.Header = Dropdown.Header;\nSelect.Item = Dropdown.Item;\nSelect.Menu = Dropdown.Menu;\nexport default Select;"],"sourceRoot":""}