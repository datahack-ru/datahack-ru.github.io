{"version":3,"sources":["pages/CosmoVirtual/CosmoVirtual.tsx"],"names":["CosmoVirtual","isMobile","useMediaPredicate","mobileBreakpoint","useTranslation","i18n","t","Page","title","Container","Image","src","alt","centered","Grid","columns","stackable","Column","Header","as","content","Trans","i18nKey","className","getAdaptiveClassName","Button","href","getExternalLinkProps"],"mappings":"uWAyHeA,EA9GgB,WAC7B,IAAMC,EAAWC,4BAAkBC,KACnC,EAAoBC,cAAZC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,EAEd,OACE,eAACC,EAAA,EAAD,CAAMC,MAAK,yBAAoBF,EAAE,iBAAjC,UACI,cAACG,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAOC,IAAI,wBAAwBC,IAAI,eAAeC,UAAQ,MAEhE,8BACE,eAACJ,EAAA,EAAD,WACE,eAACK,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACE,cAACF,EAAA,EAAKG,OAAN,UACE,8BACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,QAAQ,cACxB,cAACC,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,aAI/B,cAACR,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,SAI5D,eAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACE,cAACF,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,MAE1D,cAACC,EAAA,EAAKG,OAAN,UACE,4BACE,cAACI,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,eAK/B,eAACR,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACA,cAACF,EAAA,EAAKG,OAAN,UACE,4BACE,cAACI,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,YAI/B,cAACR,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,SAI5D,eAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACE,cAACF,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,MAE1D,cAACC,EAAA,EAAKG,OAAN,UACE,4BACE,cAACI,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,eAK/B,eAACR,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACA,cAACF,EAAA,EAAKG,OAAN,UACE,4BACE,cAACI,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,YAI/B,cAACR,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,SAI5D,eAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,WAAS,EAA/B,UACE,cAACF,EAAA,EAAKG,OAAN,UACC,cAACP,EAAA,EAAD,CAAOC,IAAI,mBAAmBC,IAAI,eAAeC,UAAQ,MAE1D,cAACC,EAAA,EAAKG,OAAN,UACE,4BACE,cAACI,EAAA,EAAD,CAAOhB,KAAMA,EAAMiB,QAAQ,eAMjC,eAACb,EAAA,EAAD,WACE,kCAAKH,EAAE,UACP,kCAAKA,EAAE,YACP,kCAAKA,EAAE,YACP,kCAAKA,EAAE,YACP,kCAAKA,EAAE,YACP,kCAAKA,EAAE,YACP,kCAAKA,EAAE,eAIT,qBACEiB,UAAWC,YAAqB,sBAAuBvB,GADzD,SAGE,eAACwB,EAAA,EAAD,yBACEF,UAAU,UACVJ,GAAI,IAAKO,KAAK,8BACVC,eAHN,cAKGrB,EAAE,SALL","file":"static/js/39.adb0d422.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Header, Container, Grid, Image, Button } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport Page from \"../../components/Page\";\nimport getExternalLinkProps from \"../../utils/getExternalLinkProps\";\nimport \"./CosmoVirtual.scss\";\n\n\n\nconst CosmoVirtual: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <Page title={`CosmoVirtual - ${t('projectTitle')}`}>\n        <Container>\n        <Image src=\"/images/cv_header.png\" alt=\"CosmoVirtual\" centered />\n        </Container>\n      <div >\n        <Container>\n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p>\n                <Header as=\"h3\" content=\"${t(cv1)}\"/>\n                <Trans i18n={i18n} i18nKey='cv1'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_1.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_2.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p>\n                <Trans i18n={i18n} i18nKey='cv2'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p>\n                <Trans i18n={i18n} i18nKey='cv3'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_3.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_4.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p>\n                <Trans i18n={i18n} i18nKey='cv4'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <p>\n                <Trans i18n={i18n} i18nKey='cv5'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            <Grid.Column>\n             <Image src=\"/images/cv_5.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            </Grid>\n           \n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n             <Image src=\"/images/cv_6.png\" alt=\"CosmoVirtual\" centered />\n            </Grid.Column>\n            <Grid.Column>\n              <p>\n                <Trans i18n={i18n} i18nKey='cv6'>\n                 </Trans>\n              </p>\n            </Grid.Column>\n            </Grid>   \n            \n          <Container>\n            <p>${t('cv7')}</p>\n            <p>${t('cv7.1')}</p>\n            <p>${t('cv7.2')}</p>\n            <p>${t('cv7.3')}</p>\n            <p>${t('cv7.4')}</p>\n            <p>${t('cv7.5')}</p>\n            <p>${t('cv7.6')}</p>\n          \n          </Container>  \n            \n          <div\n            className={getAdaptiveClassName(\"nft__button-wrapper\", isMobile)}\n          >\n            <Button\n              className=\"btn-buy\"\n              as={'a'} href='https://thecosmomasks.com/'\n              {...getExternalLinkProps()}\n            >\n              {t('BuyCV')} </Button>\n          </div>\n        \n      </Container>\n      </div>\n    </Page>\n  );\n};\n\nexport default CosmoVirtual;\n"],"sourceRoot":""}