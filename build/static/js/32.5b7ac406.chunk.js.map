{"version":3,"sources":["pages/Dashboard/index.ts","utils/getExternalLinkProps.ts","components/Footer/Footer.tsx","components/Header.tsx","components/ScrollToTop.tsx","components/Page.tsx","components/Number.tsx","pages/Dashboard/Dashboard.tsx"],"names":["getExternalLinkProps","target","rel","BlockIcons","href","Image","src","inline","Footer","isMobile","useMediaPredicate","mobileBreakpoint","useTranslation","i18n","t","className","getAdaptiveClassName","Container","Grid","columns","stackable","padded","Column","List","link","Item","as","Link","to","Routes","bscFarm","ethFarm","exchange","bridge","cupToken","nft","language","horizontal","year","Date","getFullYear","MenuItems","Menu","header","NavLink","farming","exact","cosmovirtual","MenuProfile","dispatch","useDispatch","useSelector","S","isAuthenticated","dashboard","Dropdown","Divider","onClick","A","signOut","signin","signup","langOptions","key","value","text","Header","useState","isMenuOpen","setMenuOpen","toggleMenu","changeLanguage","e","se","fixed","size","main","spaced","position","name","pointing","options","onChange","Sidebar","animation","inverted","onHide","vertical","visible","ScrollToTop","location","useLocation","visibilityButton","setVisibilityButton","useEffect","goTop","window","scroll","top","left","behavior","onscroll","height","scrollY","Page","title","children","isEmpty","Helmet","lang","charSet","Number","props","rest","displayType","defaultValue","thousandSeparator","farmingStatisticsInitData","guid","address","level","nfts","staked","stakedUsd","isFixedLevel","cmpStaked","balance","poolRef","earned","earnedToday","referrals","poolTime","days","poolTeam","members","weakTeam","poolPersonal","WalletTable","data","balanceWithdrawAllCosmo","fStats","Title","active","index","Row","mobile","textAlign","suffix","decimalScale","fixedDecimalScale","compact","fluid","disabled","amount","fee","Content","dataInit","cmpStakedFloat","masksOwned","RefLevelTable","handleClick","activeIndex","parseFloat","stakedCmp","stakedUsdPlusOld","currentCmpName","getCurrentRefLevelCmpName","nextCmp","getNextRefLevelCmp","nextCmpName","getNextRefLevelCmpName","currentNftsName","getCurrentRefLevelNftsName","nextNfts","getNextRefLevelNfts","nextNftsName","getNextRefLevelNftsName","console","log","total","celled","unstackable","HeaderCell","Body","Cell","colSpan","connect","state","hot","module","setState","setFStats","updateFStats","a","api","getV2AllData","res","ok","result","claimCclp","getV2ClaimCclp","alert","error","message","update","getBalanceCosmo","state2","setState2","update2","getProfileRefLevelData","time","setTime","now","intervalId","setInterval","clearInterval","content","style","color","titleProps","newIndex"],"mappings":"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","file":"static/js/32.5b7ac406.chunk.js","sourcesContent":["export { default } from \"./Dashboard\";\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n});\n\nexport default getExternalLinkProps;\n","import React from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"../../router/helper\";\nimport { Grid, Image, Container, List } from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport getExternalLinkProps from '../../utils/getExternalLinkProps';\n\nimport \"./Footer.scss\";\n\n\n\nconst BlockIcons: React.FC = () => (\n  <>\n    <a\n      href=\"https://t.me/CosmoFundChannel\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/telegram.png\" inline />\n    </a>\n    <a\n      href=\"https://twitter.com/CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/twitter.png\" inline />\n    </a>\n    <a\n      href=\"https://medium.com/@CosmoFund\"\n      {...getExternalLinkProps()}\n    >\n      <Image src=\"/icons/medium.png\" inline />\n    </a>\n  </>\n);\n\n\n\nconst Footer: React.FC = () => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n  return (\n    <footer className={getAdaptiveClassName(\"footer\", isMobile)}>\n      <div className=\"footer__bg\">\n        <Container>\n          <div className=\"footer__icons\">\n            <BlockIcons />\n          </div>\n\n          <div className=\"footer__links\">\n            <Grid columns={5} stackable padded>\n              {/*\n              <Grid.Column>\n                <b>{t('My Menu')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.dashboard}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Dashboard')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.team}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Team')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.wallet}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Wallet')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.profile}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('My Profile')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              */}\n              <Grid.Column>\n                <b>{t('Farms')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bscFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Binance Farms')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.ethFarm}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Ethereum Farms')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Services')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={Routes.exchange}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Exchange')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.bridge}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Cross-chain Bridge')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.cupToken}\n                    {...getExternalLinkProps()}\n                  >\n                    Cosmo Universal Power (CUP)\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>CosmoFund NFTs</b>\n                <List link>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-main-collection'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks\n                  </List.Item>\n                  {/*<List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmomasks-limited-pack'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoMasks Limited Pack\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/maskformusk'}\n                    {...getExternalLinkProps()}\n                  >\n                    MaskForMusk\n                  </List.Item>*/}\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/assets/cosmobugs'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoBugs\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmodoodle'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoDoodle\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'https://opensea.io/collection/cosmoart'}\n                    {...getExternalLinkProps()}\n                  >\n                    CosmoArt\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={Routes.nft}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('More')}...\n                  </List.Item>\n                </List>\n              </Grid.Column>\n\n              <Grid.Column>\n                <b>{t('Info')}</b>\n                <List link>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.about}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('About')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={'/cosmofund_whitepaper.pdf'}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Whitepaper')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/\" + i18n.language + \"/cosmofund_roadmap.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Roadmap')}\n                  </List.Item>\n                  <List.Item\n                    as={'a'}\n                    href={\"/cosmofund_marketing_plan.pdf\"}\n                    {...getExternalLinkProps()}\n                  >\n                    {t('Marketing plan')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.tokenomics}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Tokenomics')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.faq}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('FAQ')}\n                  </List.Item>\n                  <List.Item\n                    as={Link}\n                    to={'#'}\n                  //to={Routes.contracts}\n                  //{...getExternalLinkProps()}\n                  >\n                    {t('Smart Contracts')}\n                  </List.Item>\n                </List>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"footer__banner\">\n            <div className=\"footer__copyright\">\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={'a'}\n                  href={'https://cosmofund.space/'}\n                  {...getExternalLinkProps()}\n                >\n                  {t('copyright', { year: new Date().getFullYear() })}{\"\\u00A0 \"}\n                </List.Item>\n              </List>\n\n              <List link horizontal={!isMobile}>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.terms}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Terms and Conditions')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.privacy}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Privacy Policy')}\n                </List.Item>\n                <List.Item\n                  as={'a'}\n                  href='mailto:support@cosmofund.space'\n                  {...getExternalLinkProps()}\n                >\n                  {t('Contact Us')}\n                </List.Item>\n                <List.Item\n                  as={Link}\n                  to={'#'}\n                //to={Routes.disclaimer}\n                //{...getExternalLinkProps()}\n                >\n                  {t('Disclaimer')}\n                </List.Item>\n              </List>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from \"react-i18next\";\nimport { Container, Menu, Image, Sidebar, Dropdown, Label } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { mobileBreakpoint, getAdaptiveClassName } from \"../helpers/Media\";\nimport { Routes } from \"../router/helper\";\nimport * as S from \"../store/selectors\";\nimport * as A from \"../store/actions\";\n\n\n\nconst MenuItems: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Menu.Item header as={NavLink} to={Routes.nft}>\n        NFT\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.farming}>\n        {t(\"Farming\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} exact to={Routes.exchange}>\n        {t(\"Exchange\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.bridge}>\n        {t(\"Bridge\")}\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cupToken}>\n        CUP\n      </Menu.Item>\n      <Menu.Item header as={NavLink} to={Routes.cosmovirtual}>\n        CosmoVirtual\n      </Menu.Item>\n\n    </>\n  );\n};\n\nconst MenuProfile: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const signOut = () => {\n    dispatch(A.profile.signOut());\n  };\n\n  if (isAuthenticated) {\n    return (\n      <>\n        {/*<Dropdown.Item as={Link} to={Routes.profile}>\n          {t(\"My Profile\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.wallet}>\n          {t(\"My Wallet\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} to={Routes.team}>\n          {t(\"My Team\")}\n        </Dropdown.Item>\n        <Dropdown.Item as={Link} exact to={Routes.MyReferrals}>\n          {t('Referral program')}\n        </Dropdown.Item>\n        */}\n        <Menu.Item header as={Link} exact to={Routes.dashboard}>\n          {t('Dashboard')}\n        </Menu.Item>\n\n        <Dropdown.Divider />\n        <Dropdown.Item as='a' onClick={signOut}>{t('Sign Out')}</Dropdown.Item>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Menu.Item header as={Link} to={Routes.signin}>\n          {t(\"Sign In\")}\n        </Menu.Item>\n        <Menu.Item header as={Link} to={Routes.signup}>\n          {t(\"Sign Up\")}\n        </Menu.Item>\n      </>\n    );\n  }\n};\n\nexport const langOptions = [\n  { key: \"en\", value: \"en\", text: \"EN\" },\n  { key: \"cn\", value: \"cn\", text: \"CN\" },\n  { key: \"ru\", value: \"ru\", text: \"RU\" },\n];\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n  const isAuthenticated = useSelector(S.profile.isAuthenticated);\n\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  const changeLanguage = (e: any, se: any) => {\n    i18n.changeLanguage(se.value);\n  };\n  //<div style={{ color: '#ffae00' }}>{t(\"projectTitle\")}</div>\n\n  if (isAuthenticated)\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Dropdown text={t(\"Profile\")} pointing className=\"link item\">\n                    <Dropdown.Menu>\n                      <MenuProfile />\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n  else\n    return (\n      <>\n        <Menu\n          fixed=\"top\"\n          size=\"large\"\n          className={getAdaptiveClassName(\"main-menu\", isMobile)}\n        >\n          <Container>\n            <Menu.Item header as={Link} to={Routes.main} className=\"logo\">\n              <Image src=\"/images/layout/logo.png\" spaced=\"right\" />\n              {t(\"projectTitle\")}\n            </Menu.Item>\n\n            {isMobile ? (\n              <Menu.Item onClick={toggleMenu} position=\"right\">\n                <Dropdown\n                  name=\"lang\"\n                  pointing\n                  className=\"link item\"\n                  options={langOptions}\n                  value={i18n.language}\n                  onChange={changeLanguage}\n                />\n                <Image src=\"/icons/menu.png\" inline />\n              </Menu.Item>\n            ) : (\n              <>\n                <MenuItems />\n                <Menu.Menu position=\"right\">\n                  <Menu.Item header as={Link} to={Routes.signin}>\n                    {t(\"Sign In\")}\n                  </Menu.Item>\n                  {/*<Menu.Item header as={Link} to={Routes.signup}>\n                    {t(\"Sign Up\")}\n                  </Menu.Item>*/}\n\n                  <Dropdown\n                    name=\"lang\"\n                    pointing\n                    className=\"link item\"\n                    options={langOptions}\n                    value={i18n.language}\n                    onChange={changeLanguage}\n                  />\n                </Menu.Menu>\n              </>\n            )}\n          </Container>\n        </Menu>\n\n        {isMobile && (\n          <Sidebar\n            as={Menu}\n            animation=\"overlay\"\n            inverted\n            onHide={() => setMenuOpen(false)}\n            vertical\n            visible={isMenuOpen}\n          >\n            <MenuItems />\n            <MenuProfile />\n          </Sidebar>\n        )}\n      </>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ScrollToTop: React.FC = () => {\n  const location = useLocation();\n  const [visibilityButton, setVisibilityButton] = useState(false);\n\n  useEffect(() => {\n    goTop();\n  }, [location]);\n\n  const goTop = () => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  window.onscroll = () => {\n    const height = window.scrollY;\n    if (height > 600) {\n      setVisibilityButton(true);\n    } else {\n      setVisibilityButton(false);\n    }\n  };\n\n  return visibilityButton ? (\n    <Image src=\"/images/layout/top.png\" onClick={goTop} className=\"scrollTop\" />\n  ) : null;\n};\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header';\nimport ScrollToTop from './ScrollToTop';\n\n\n\ninterface IPageProps {\n  title: string;\n  description?: string;\n  isEmpty?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Page: React.FC<IPageProps> = ({ title, children, isEmpty, className }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <>\n      <Helmet>\n        <html lang={i18n.language} />\n        <meta charSet='utf-8' />\n        <title>{title}</title>\n      </Helmet>\n      {!isEmpty && <Header />}\n      <main\n        className={className}\n      //style={{ minHeight: '95vh', }} \n      >\n        {children}\n      </main>\n      {!isEmpty && <Footer />}\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\n\n\n\ninterface INumberFormat {\n  value?: string | number | null;\n  suffix?: string;\n  decimalScale?: number;\n  fixedDecimalScale?: boolean;\n  prefix?: string;\n  allowLeadingZeros?: boolean;\n  style?: any;\n}\n\nfunction Number(props: INumberFormat) {\n  const { ...rest } = props;\n\n  return (\n    <NumberFormat\n      displayType={'text'}\n      defaultValue={0}\n      thousandSeparator={true}\n      {...rest}\n    />\n  );\n}\n\nexport default Number;\n","import React, { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Header,\n  Container,\n  Table,\n  Grid,\n  Button,\n  Progress,\n  Accordion,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { Link } from 'react-router-dom';\nimport { getAdaptiveClassName, mobileBreakpoint } from \"../../helpers/Media\";\nimport Page from \"../../components/Page\";\nimport Number from \"../../components/Number\";\nimport * as S from '../../store/selectors';\nimport { api } from '../../store/configureStore';\nimport \"./Dashboard.scss\";\n\n\n\ninterface IFarmingStatistics {\n  guid: any,\n  address: any,\n\n  level: any,\n  nfts: any,\n  staked: any,\n  stakedUsd: any,\n  isFixedLevel: any,\n  cmpStaked: any,\n\n  balance: any,\n\n  poolRef: {\n    earned: any,\n    earnedToday: any,\n    referrals: any,\n  },\n\n  poolTime: {\n    days: any,\n    earned: any,\n    earnedToday: any,\n  },\n\n  poolTeam: {\n    earned: any,\n    earnedToday: any,\n    members: any,\n    weakTeam: any,\n  },\n\n  poolPersonal: {\n    earned: any,\n    earnedToday: any,\n  },\n}\n\nconst farmingStatisticsInitData = {\n  guid: -1,\n  address: '',\n\n  level: 'STARTER',\n  nfts: 0,\n  staked: '0.000000000000000000',\n  stakedUsd: '0.000000000000000000',\n  isFixedLevel: false,\n  cmpStaked: '0.000000000000000000',\n\n  balance: '0.000000000000000000',\n\n  poolRef: {\n    earned: '0.000000000000000000',\n    earnedToday: '0.000000000000000000',\n    referrals: 0,\n  },\n\n  poolTime: {\n    days: 0,\n    earned: '0.000000000000000000',\n    earnedToday: '0.000000000000000000',\n  },\n\n  poolTeam: {\n    earned: '0.000000000000000000',\n    earnedToday: '0.000000000000000000',\n    members: 0,\n    weakTeam: '',\n  },\n\n  poolPersonal: {\n    earned: '0.000000000000000000',\n    earnedToday: '0.000000000000000000',\n  },\n};\n\n\n\nconst WalletTable = ({\n  isAuthenticated,\n  data,\n  balanceWithdrawAllCosmo,\n  //handleClick,\n  fStats,\n}: any) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"dashboard__panel\">\n      <Accordion>\n        <Accordion.Title\n          active={false}\n          index={0}\n        //onClick={handleClick}\n        >\n          <div className=\"dashboard__panel-content\">\n            <Grid>\n              <Grid.Row>\n                <Grid.Column mobile={10} textAlign='left'>\n                  <h3><Icon name='dropdown' /> {t('CosmoSwap Wallet')}</h3>\n                </Grid.Column>\n                <Grid.Column mobile={6} textAlign='right'>\n                  {isAuthenticated\n                    ? null //<Button as={Link} to={'/wallet'}>{t('Open Wallet')}</Button>\n                    : <Button as={Link} to={'/signin'}>{t('Sign In')}</Button>\n                  }\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n            <Grid>\n              <Grid.Row>\n                <Grid.Column mobile={8} textAlign='left'><b>{t('Balance')}:</b></Grid.Column>\n                <Grid.Column mobile={8} textAlign='right'>\n                  <b><Number value={fStats.balance} suffix={' CCLP'} decimalScale={0} fixedDecimalScale /></b>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column mobile={8} textAlign='left'></Grid.Column>\n                <Grid.Column mobile={8} textAlign='right'>\n                  <b><Number value={data.balance} suffix={' COSMO'} decimalScale={0} fixedDecimalScale /></b>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column mobile={16} textAlign='center'>\n                  <Button\n                    compact fluid\n                    disabled={!isAuthenticated}\n                    onClick={balanceWithdrawAllCosmo}\n                  >{t('Withdraw all')}</Button>\n                  <p>\n                    {t('minimumWithdrawFee', { amount: '10,000,000,000', fee: '0.001 BNB' })}\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </div>\n        </Accordion.Title>\n        <Accordion.Content active={false}>\n        </Accordion.Content>\n      </Accordion>\n    </div>\n  );\n}\n\n\nfunction getNextRefLevelCmp(cmpStaked = 0) {\n  if (cmpStaked >= 10000) return 50000;\n  else if (cmpStaked >= 3000) return 10000;\n  else if (cmpStaked >= 500) return 3000;\n  else if (cmpStaked >= 50) return 500;\n  else return 50;\n}\nfunction getNextRefLevelCmpName(cmpStaked = 0) {\n  if (cmpStaked >= 10000) return 'MAX';\n  else if (cmpStaked >= 3000) return 'ELITE';\n  else if (cmpStaked >= 500) return 'VIP';\n  else if (cmpStaked >= 50) return 'PRO';\n  else return 'PARTNER';\n}\nfunction getCurrentRefLevelCmpName(cmpStaked = 0) {\n  if (cmpStaked >= 50000) return 'MAX';\n  else if (cmpStaked >= 10000) return 'ELITE';\n  else if (cmpStaked >= 3000) return 'VIP';\n  else if (cmpStaked >= 500) return 'PRO';\n  else if (cmpStaked >= 50) return 'PARTNER';\n  else return 'STARTER';\n}\n\n\n\nfunction getNextRefLevelNfts(masksOwned = 0) {\n  if (masksOwned >= 3) return 5;\n  else if (masksOwned >= 1) return 3;\n  else return 1;\n}\nfunction getNextRefLevelNftsName(masksOwned = 0) {\n  if (masksOwned >= 3) return 'MAX';\n  else if (masksOwned >= 1) return 'ELITE';\n  else return 'VIP';\n}\nfunction getCurrentRefLevelNftsName(masksOwned = 0) {\n  if (masksOwned >= 5) return 'MAX';\n  else if (masksOwned >= 3) return 'ELITE';\n  else if (masksOwned >= 1) return 'VIP';\n  else return 'STARTER';\n}\n\nconst dataInit = {\n  level: 'STARTER',\n  cmpStaked: '0.0',\n  cmpStakedFloat: 0,\n  masksOwned: 0,\n  address: null,\n}\n\nconst RefLevelTable = ({\n  isAuthenticated,\n  data,\n  handleClick,\n  activeIndex,\n  fStats,\n}: any) => {\n  const { t } = useTranslation();\n  const stakedUsd = parseFloat(fStats.stakedUsd);\n  const stakedCmp = parseFloat(fStats.cmpStaked);\n  const stakedUsdPlusOld = stakedUsd + stakedCmp;\n\n  const currentCmpName = getCurrentRefLevelCmpName(stakedUsdPlusOld);\n  const nextCmp = getNextRefLevelCmp(stakedUsdPlusOld);\n  const nextCmpName = getNextRefLevelCmpName(stakedUsdPlusOld);\n\n  const currentNftsName = getCurrentRefLevelNftsName(parseFloat(fStats.nfts));\n  const nextNfts = getNextRefLevelNfts(parseFloat(fStats.nfts));\n  const nextNftsName = getNextRefLevelNftsName(parseFloat(fStats.nfts));\n  console.log(parseFloat(fStats.nfts))\n\n  const index = 0;\n  return (\n    <div className=\"dashboard__panel\">\n      <Accordion>\n        <Accordion.Title\n          active={activeIndex === index}\n          index={index}\n          onClick={handleClick}\n        >\n          <div className=\"dashboard__panel-header\">\n            <h3><Icon name='dropdown' />{t('Referral level')}</h3>\n            {isAuthenticated\n              ? <Button>{fStats.level}</Button>\n              : <Button as={Link} to={'/signin'}>{t('Sign In')}</Button>\n            }\n          </div>\n\n          <div className=\"dashboard__panel-content\">\n            <Grid columns=\"equal\" className=\"pt-1\">\n              <Grid.Column>{currentCmpName}</Grid.Column>\n              <Grid.Column textAlign=\"right\">{nextCmpName}</Grid.Column>\n            </Grid>\n            <Progress value={3} total={100} size=\"tiny\">\n              {stakedCmp > 0\n                ? <span>\n                  <Number\n                    value={stakedUsdPlusOld} decimalScale={0} fixedDecimalScale={true}\n                  /> (<Number\n                    value={stakedUsd} decimalScale={0} fixedDecimalScale={true} suffix=' USD'\n                  /> + <Number\n                    value={stakedCmp} decimalScale={0} fixedDecimalScale={true} suffix=' CMP'\n                  />)\n                </span>\n                : <Number\n                  value={stakedUsdPlusOld} decimalScale={0} fixedDecimalScale={true}\n                />\n              }/<Number\n                value={nextCmp} decimalScale={0} fixedDecimalScale={true}\n              /> USD\n            </Progress>\n\n            <Grid columns=\"equal\">\n              <Grid.Column>{currentNftsName}</Grid.Column>\n              <Grid.Column textAlign=\"right\">{nextNftsName}</Grid.Column>\n            </Grid>\n            <Progress value={3} total={100} size=\"tiny\">\n              {fStats.nfts}/{nextNfts} CosmoFound NFTs\n            </Progress>\n            <br />\n          </div>\n        </Accordion.Title>\n\n        <Accordion.Content active={activeIndex === index}>\n          <Table celled padded compact unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>{t('Referral levels')}</Table.HeaderCell>\n                <Table.HeaderCell>STARTER</Table.HeaderCell>\n                <Table.HeaderCell>PARTNER</Table.HeaderCell>\n                <Table.HeaderCell>PRO</Table.HeaderCell>\n                <Table.HeaderCell>VIP</Table.HeaderCell>\n                <Table.HeaderCell>ELITE</Table.HeaderCell>\n                <Table.HeaderCell>MAX</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>USD</Table.Cell>\n                <Table.Cell textAlign=\"center\">0</Table.Cell>\n                <Table.Cell>50</Table.Cell>\n                <Table.Cell>500</Table.Cell>\n                <Table.Cell>3,000</Table.Cell>\n                <Table.Cell>10,000</Table.Cell>\n                <Table.Cell>50,000</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>CosmoFund NFTs</Table.Cell>\n                <Table.Cell textAlign=\"center\">-</Table.Cell>\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell>-</Table.Cell>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>3</Table.Cell>\n                <Table.Cell>5</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell className=\"separator\" colSpan={7}>\n                  {t('Farming rewards')}\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>{t('Referral farming reward')}</Table.Cell>\n                <Table.Cell>0%</Table.Cell>\n                <Table.Cell>5%</Table.Cell>\n                <Table.Cell>8%</Table.Cell>\n                <Table.Cell>10%</Table.Cell>\n                <Table.Cell>15%</Table.Cell>\n                <Table.Cell>20%</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>{t('Team farming reward')}</Table.Cell>\n                <Table.Cell>0%</Table.Cell>\n                <Table.Cell>+5%</Table.Cell>\n                <Table.Cell>+8%</Table.Cell>\n                <Table.Cell>+10%</Table.Cell>\n                <Table.Cell>+15%</Table.Cell>\n                <Table.Cell>+20%</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Accordion.Content>\n      </Accordion>\n    </div >\n  );\n}\n\n\n\n\nconst Dashboard: React.FC<any> = ({ isAuthenticated }) => {\n  const isMobile = useMediaPredicate(mobileBreakpoint);\n  const { i18n, t } = useTranslation();\n\n\n  const [state, setState] = useState({ activeIndex: -1, balance: '0', });\n  const { activeIndex, balance, } = state;\n\n  const handleClick = (e: any, titleProps: any) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setState({ ...state, activeIndex: newIndex });\n  }\n\n\n  const [fStats, setFStats] = useState<IFarmingStatistics>(farmingStatisticsInitData);\n  const updateFStats = async () => {\n    try {\n      const res = await api.getV2AllData();\n      if (res.ok) {\n        setFStats(res.result);\n      } else {\n        setFStats(farmingStatisticsInitData);\n      }\n    } catch (error) {\n      setFStats(farmingStatisticsInitData);\n    }\n  }\n\n  const claimCclp = async () => {\n    try {\n      const res = await api.getV2ClaimCclp();\n      if (res.ok) {\n        alert('Done');\n      } else {\n        alert(res.error.message);\n      }\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n\n  const balanceWithdrawAllCosmo = async () => {\n    claimCclp();\n    if (parseFloat(balance) < 10 * 1000000000)\n      return alert('Insufficient funds. Too high fees. Minimum 10,000,000,000 COSMO');\n    try {\n      const res = await api.balanceWithdrawAllCosmo();\n      if (res.ok) alert('Withdrawal has been accepted. Please wait.');\n      else alert(res.error.message);\n    } catch (error) { console.error(error); }\n  }\n\n\n\n\n  const update = async () => {\n    if (isAuthenticated) {\n      try {\n        updateFStats();\n        const res = await api.getBalanceCosmo();\n        //console.log(res.result)\n        if (res.ok) setState({ ...state, ...res.result, });\n        else setState({ ...state, ...{ balance: '0' } });\n      } catch (error) { console.error(error); }\n    }\n  }\n\n  const [state2, setState2] = useState(dataInit);\n  const update2 = async () => {\n    if (isAuthenticated) {\n      try {\n        const res = await api.getProfileRefLevelData();\n        if (res.ok) setState2({ ...res.result, });\n        else setState2(dataInit);\n      } catch (error) { console.error(error); }\n    }\n  }\n\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    setTime(Date.now());\n    const intervalId = setInterval(() => {\n      setTime(Date.now());\n    }, 60 * 1000)\n    return () => {\n      clearInterval(intervalId);\n    }\n  }, []);\n\n  useEffect(() => {\n    try {\n      update();\n      update2();\n    } catch (error) { console.error(error); }\n  }, [time]);\n\n  return (\n    <Page title={`${t('Dashboard')} - ${t('projectTitle')}`}>\n      <div className={getAdaptiveClassName(\"dashboard__header\", isMobile)}>\n        <Container>\n          <Header as=\"h1\" content={t('Dashboard')} className=\"shadow\" style={{ color: '#ffae00' }} />\n        </Container>\n      </div>\n\n      <div className={getAdaptiveClassName(\"dashboard\", isMobile)}>\n        <Container>\n          <Grid columns=\"equal\" stackable>\n            <Grid.Column>\n              <RefLevelTable\n                isAuthenticated={isAuthenticated}\n                handleClick={handleClick}\n                activeIndex={activeIndex}\n                data={state2}\n                fStats={fStats}\n              />\n            </Grid.Column>\n\n            <Grid.Column>\n              <WalletTable\n                isAuthenticated={isAuthenticated}\n                data={state}\n                balanceWithdrawAllCosmo={balanceWithdrawAllCosmo}\n                fStats={fStats}\n              />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    isAuthenticated: S.profile.isAuthenticated(state),\n    //myWallet: S.wallet.getAccount(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(hot(module)(Dashboard));\n"],"sourceRoot":""}